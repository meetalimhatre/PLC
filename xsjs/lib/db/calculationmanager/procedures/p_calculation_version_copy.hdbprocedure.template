PROCEDURE "sap.plc.db.calculationmanager.procedures::p_calculation_version_copy" (
		IN iv_old_calculation_version_id 	INTEGER,
		IN iv_new_calculation_version_id	INTEGER,
		IN iv_session_id 					NVARCHAR(50),
		OUT ot_new_calculation_version      "sap.plc.db.calculationmanager.procedures::ts_calculation_version_temporary" default empty,
		OUT ot_new_items                    "sap.plc.db.calculationmanager.procedures::ts_item_temporary" default empty
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
BEGIN

declare generated_from_version_type INTEGER = 8;
declare base_version_type INTEGER = 1;
declare lv_current_utctimestamp	timestamp;
declare lv_is_active INTEGER;
declare lv_is_status_copyable INTEGER;
select current_utctimestamp into lv_current_utctimestamp from "sap.plc.db::DUMMY";
SELECT status.IS_ACTIVE , status.IS_STATUS_COPYABLE INTO lv_is_active,lv_is_status_copyable DEFAULT 0,0 FROM "sap.plc.db::basis.t_status" AS status
    JOIN  "sap.plc.db::basis.t_calculation_version" AS version ON status.STATUS_ID = version.STATUS_ID
    WHERE version.calculation_version_id = :iv_old_calculation_version_id;

-- copy all items and item texts to t_item_temporary for new calculation version
INSERT INTO "sap.plc.db::basis.t_item_temporary" (
		session_id,
		ITEM_ID, calculation_version_id, PARENT_ITEM_ID, PREDECESSOR_ITEM_ID, IS_ACTIVE, HIGHLIGHT_GREEN, HIGHLIGHT_ORANGE, HIGHLIGHT_YELLOW , ITEM_CATEGORY_ID ,CHILD_ITEM_CATEGORY_ID, REFERENCED_CALCULATION_VERSION_ID, 
		ACCOUNT_ID, DETERMINED_ACCOUNT_ID, DOCUMENT_TYPE_ID, DOCUMENT_ID, DOCUMENT_VERSION, DOCUMENT_PART, DOCUMENT_STATUS_ID , DESIGN_OFFICE_ID, 
		MATERIAL_ID , MATERIAL_TYPE_ID , MATERIAL_GROUP_ID , IS_PHANTOM_MATERIAL, IS_CONFIGURABLE_MATERIAL, MATERIAL_SOURCE, OVERHEAD_GROUP_ID , VALUATION_CLASS_ID , 
		PURCHASING_GROUP, PURCHASING_DOCUMENT, LOCAL_CONTENT, ACTIVITY_TYPE_ID, PROCESS_ID, LOT_SIZE , LOT_SIZE_CALCULATED , LOT_SIZE_IS_MANUAL , ENGINEERING_CHANGE_NUMBER_ID, 
		COMPANY_CODE_ID, COST_CENTER_ID, PLANT_ID, WORK_CENTER_ID, WORK_CENTER_CATEGORY, EFFICIENCY, BUSINESS_AREA_ID, PROFIT_CENTER_ID, 
		QUANTITY , QUANTITY_CALCULATED , QUANTITY_IS_MANUAL , QUANTITY_UOM_ID, 
		TOTAL_QUANTITY , TOTAL_QUANTITY_UOM_ID, TOTAL_QUANTITY_DEPENDS_ON , IS_RELEVANT_TO_COSTING_IN_ERP, BASE_QUANTITY, BASE_QUANTITY_CALCULATED, BASE_QUANTITY_IS_MANUAL, 
		QUANTITY_PER_BASE_UNIT, QUANTITY_PER_BASE_UNIT_UOM_ID, PRICE_FIXED_PORTION, PRICE_FIXED_PORTION_CALCULATED , PRICE_FIXED_PORTION_IS_MANUAL , 
		PRICE_VARIABLE_PORTION, PRICE_VARIABLE_PORTION_CALCULATED , PRICE_VARIABLE_PORTION_IS_MANUAL , PRICE, TRANSACTION_CURRENCY_ID, 
		PRICE_UNIT, PRICE_UNIT_CALCULATED , PRICE_UNIT_IS_MANUAL , PRICE_UNIT_UOM_ID, IS_PRICE_SPLIT_ACTIVE, IS_DISABLING_ACCOUNT_DETERMINATION, 
		PRICE_ID, CONFIDENCE_LEVEL_ID, PRICE_SOURCE_ID, PRICE_SOURCE_TYPE_ID, SURCHARGE, IS_DISABLING_PRICE_DETERMINATION, VENDOR_ID, 
		TARGET_COST , TARGET_COST_CALCULATED, TARGET_COST_IS_MANUAL , TARGET_COST_CURRENCY_ID, 
		CREATED_ON , CREATED_BY, 
		LAST_MODIFIED_ON , LAST_MODIFIED_BY, 
		PRICE_FOR_TOTAL_QUANTITY, PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION,
		PRICE_FOR_TOTAL_QUANTITY2, PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY3, PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION,
		OTHER_COST, OTHER_COST_FIXED_PORTION, OTHER_COST_VARIABLE_PORTION, 
		TOTAL_COST, TOTAL_COST_FIXED_PORTION, TOTAL_COST_VARIABLE_PORTION,
		TOTAL_COST2, TOTAL_COST2_FIXED_PORTION, TOTAL_COST2_VARIABLE_PORTION,
		TOTAL_COST3, TOTAL_COST3_FIXED_PORTION, TOTAL_COST3_VARIABLE_PORTION,
		item_description, comment,
		IS_DIRTY, IS_DELETED,
		TOTAL_COST_PER_UNIT_FIXED_PORTION, TOTAL_COST_PER_UNIT_VARIABLE_PORTION, TOTAL_COST_PER_UNIT, 
		TOTAL_COST2_PER_UNIT_FIXED_PORTION, TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, TOTAL_COST2_PER_UNIT, 
		TOTAL_COST3_PER_UNIT_FIXED_PORTION, TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, TOTAL_COST3_PER_UNIT, 
		TOTAL_QUANTITY_OF_VARIANTS, BOM_COMPARE_KEY
	)
	SELECT
		:iv_session_id AS session_id,
		ITEM_ID, :iv_new_calculation_version_id AS calculation_version_id, PARENT_ITEM_ID, PREDECESSOR_ITEM_ID, IS_ACTIVE, HIGHLIGHT_GREEN, HIGHLIGHT_ORANGE, HIGHLIGHT_YELLOW , ITEM_CATEGORY_ID , CHILD_ITEM_CATEGORY_ID,REFERENCED_CALCULATION_VERSION_ID, 
		ACCOUNT_ID, DETERMINED_ACCOUNT_ID, DOCUMENT_TYPE_ID, DOCUMENT_ID, DOCUMENT_VERSION, DOCUMENT_PART, DOCUMENT_STATUS_ID , DESIGN_OFFICE_ID, 
		MATERIAL_ID , MATERIAL_TYPE_ID , MATERIAL_GROUP_ID , IS_PHANTOM_MATERIAL, IS_CONFIGURABLE_MATERIAL, MATERIAL_SOURCE, OVERHEAD_GROUP_ID , VALUATION_CLASS_ID , 
		PURCHASING_GROUP, PURCHASING_DOCUMENT, LOCAL_CONTENT, ACTIVITY_TYPE_ID, PROCESS_ID, LOT_SIZE, LOT_SIZE_CALCULATED, LOT_SIZE_IS_MANUAL, ENGINEERING_CHANGE_NUMBER_ID, 
		COMPANY_CODE_ID, COST_CENTER_ID, PLANT_ID, WORK_CENTER_ID, WORK_CENTER_CATEGORY, EFFICIENCY, BUSINESS_AREA_ID, PROFIT_CENTER_ID, 
		QUANTITY , QUANTITY_CALCULATED , QUANTITY_IS_MANUAL , QUANTITY_UOM_ID, 
		TOTAL_QUANTITY, TOTAL_QUANTITY_UOM_ID, TOTAL_QUANTITY_DEPENDS_ON , IS_RELEVANT_TO_COSTING_IN_ERP , BASE_QUANTITY, BASE_QUANTITY_CALCULATED, BASE_QUANTITY_IS_MANUAL, QUANTITY_PER_BASE_UNIT, 
		QUANTITY_PER_BASE_UNIT_UOM_ID, PRICE_FIXED_PORTION, PRICE_FIXED_PORTION_CALCULATED , PRICE_FIXED_PORTION_IS_MANUAL , 
		PRICE_VARIABLE_PORTION, PRICE_VARIABLE_PORTION_CALCULATED , PRICE_VARIABLE_PORTION_IS_MANUAL , PRICE, TRANSACTION_CURRENCY_ID, 
		PRICE_UNIT, PRICE_UNIT_CALCULATED , PRICE_UNIT_IS_MANUAL , PRICE_UNIT_UOM_ID, IS_PRICE_SPLIT_ACTIVE, 
		IS_DISABLING_ACCOUNT_DETERMINATION, PRICE_ID, CONFIDENCE_LEVEL_ID, PRICE_SOURCE_ID, PRICE_SOURCE_TYPE_ID, SURCHARGE, IS_DISABLING_PRICE_DETERMINATION, VENDOR_ID, 
		TARGET_COST, TARGET_COST_CALCULATED , TARGET_COST_IS_MANUAL , TARGET_COST_CURRENCY_ID, 
		:lv_current_utctimestamp , :iv_session_id,         -- set CREATED_... fields to actual time and user
		:lv_current_utctimestamp , :iv_session_id,         -- set LAST_MODIFIED_... fields to actual time and user
		PRICE_FOR_TOTAL_QUANTITY, PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY2, PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY3, PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION,
		OTHER_COST, OTHER_COST_FIXED_PORTION, OTHER_COST_VARIABLE_PORTION, 
		TOTAL_COST, TOTAL_COST_FIXED_PORTION, TOTAL_COST_VARIABLE_PORTION,
		TOTAL_COST2, TOTAL_COST2_FIXED_PORTION, TOTAL_COST2_VARIABLE_PORTION,
		TOTAL_COST3, TOTAL_COST3_FIXED_PORTION, TOTAL_COST3_VARIABLE_PORTION,
		ITEM_DESCRIPTION, COMMENT, 
		1, 0, -- set items to dirty and not deleted
		TOTAL_COST_PER_UNIT_FIXED_PORTION, TOTAL_COST_PER_UNIT_VARIABLE_PORTION, TOTAL_COST_PER_UNIT, 
		TOTAL_COST2_PER_UNIT_FIXED_PORTION, TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, TOTAL_COST2_PER_UNIT, 
		TOTAL_COST3_PER_UNIT_FIXED_PORTION, TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, TOTAL_COST3_PER_UNIT,
		TOTAL_QUANTITY_OF_VARIANTS, BOM_COMPARE_KEY
	FROM "sap.plc.db::basis.t_item"
	WHERE 	calculation_version_id = :iv_old_calculation_version_id
			AND (	SELECT COUNT(session_id)							-- check that calculation version is not opened
					FROM "sap.plc.db::basis.t_item_temporary"
					WHERE session_id = :iv_session_id AND calculation_version_id = :iv_new_calculation_version_id) = 0;

-- copy version and version texts to t_calculation_version_temporary for new calculation version
INSERT INTO "sap.plc.db::basis.t_calculation_version_temporary" (
		session_id, calculation_version_id, CALCULATION_ID, calculation_version_name, STATUS_ID, CALCULATION_VERSION_TYPE, ROOT_ITEM_ID, CUSTOMER_ID, SALES_PRICE , SALES_PRICE_CURRENCY_ID, 
		REPORT_CURRENCY_ID, COSTING_SHEET_ID, COMPONENT_SPLIT_ID , SALES_DOCUMENT, 
		START_OF_PRODUCTION, END_OF_PRODUCTION, VALUATION_DATE, LAST_MODIFIED_ON , LAST_MODIFIED_BY, MASTER_DATA_TIMESTAMP, 
		LIFECYCLE_PERIOD_FROM, BASE_VERSION_ID, IS_FROZEN, EXCHANGE_RATE_TYPE_ID, MATERIAL_PRICE_STRATEGY_ID, ACTIVITY_PRICE_STRATEGY_ID, SELECTED_TOTAL_COSTING_SHEET, SELECTED_TOTAL_COMPONENT_SPLIT
	)
	SELECT
	:iv_session_id AS session_id,
	:iv_new_calculation_version_id AS calculation_version_id,
	version.CALCULATION_ID,
	version.CALCULATION_VERSION_NAME AS calculation_version_name,
	CASE
		WHEN (:lv_is_active != 1 OR :lv_is_status_copyable != 1)                                    -- if the status is not copyable or is not active use the default status
			THEN (SELECT STATUS_ID FROM "sap.plc.db::basis.t_status" AS status WHERE status.IS_DEFAULT = 1)     -- get the default status, if there is no default status the status will be null
		ELSE version.STATUS_ID                                                                                  -- else use the status from the calculation version to be copied
    END AS STATUS_ID,
	case
		when version.CALCULATION_VERSION_TYPE = :generated_from_version_type            -- when the version from which another version is being copied
			then :base_version_type                                                     -- has the CALCULATION_VERSION_TYPE = 8 (generated from variant)
		else version.CALCULATION_VERSION_TYPE                                           -- then the CALCULATION_VERSION_TYPE has to be set to 1 (base)
	end as calculation_version_type, 
	version.ROOT_ITEM_ID, 
	version.CUSTOMER_ID, 
	version.SALES_PRICE , 
	version.SALES_PRICE_CURRENCY_ID, 
	version.REPORT_CURRENCY_ID, 
	version.COSTING_SHEET_ID, 
	version.COMPONENT_SPLIT_ID , 
	SALES_DOCUMENT, 
	version.START_OF_PRODUCTION, 
	version.END_OF_PRODUCTION, 
	version.VALUATION_DATE , 
	null as LAST_MODIFIED_ON , 
	null as LAST_MODIFIED_BY, 
	version.MASTER_DATA_TIMESTAMP, 
	version.LIFECYCLE_PERIOD_FROM, 
	version.BASE_VERSION_ID, 
	null as IS_FROZEN, -- copied version is set to unfrozen 
	version.EXCHANGE_RATE_TYPE_ID,
	version.MATERIAL_PRICE_STRATEGY_ID,
	version.ACTIVITY_PRICE_STRATEGY_ID,
	version.SELECTED_TOTAL_COSTING_SHEET, 
	version.SELECTED_TOTAL_COMPONENT_SPLIT
FROM "sap.plc.db::basis.t_calculation_version" AS version
WHERE 	version.calculation_version_id = :iv_old_calculation_version_id
		AND (	SELECT COUNT(session_id)
				FROM "sap.plc.db::basis.t_calculation_version_temporary"
				WHERE session_id = :iv_session_id AND calculation_version_id = :iv_new_calculation_version_id) = 0;

-- copy tags
insert into "sap.plc.db::basis.t_entity_tags" (tag_id, entity_type, entity_id, created_on, created_by)
        select tag_id, entity_type, :iv_new_calculation_version_id as entity_id, :lv_current_utctimestamp as created_on, :iv_session_id as created_by from "sap.plc.db::basis.t_entity_tags" where entity_id = :iv_old_calculation_version_id and entity_type = 'V';

--------------------------------------------------------------------------------------
-- Handle lifecycle versions
--------------------------------------------------------------------------------------
-- reset PRICE_SOURCE properties for items of a lifecycle version
UPDATE "sap.plc.db::basis.t_item_temporary" item
    SET 
	    PRICE_SOURCE_ID = 'MANUAL_PRICE',
		PRICE_SOURCE_TYPE_ID = 3
	FROM "sap.plc.db::basis.t_item_temporary" item
		INNER JOIN "sap.plc.db::basis.t_calculation_version_temporary" calcVersion								
   			ON calcVersion.calculation_version_id = item.calculation_version_id and calcVersion.session_id = item.session_id
    	WHERE calcVersion.calculation_version_id = :iv_new_calculation_version_id and calcVersion.session_id = :iv_session_id  
	    	AND ( calcVersion.CALCULATION_VERSION_TYPE = 2 or calcVersion.CALCULATION_VERSION_TYPE = 16 )
		    AND item.PRICE_SOURCE_ID = 'OUTDATED_PRICE';

-- Set properties of copied lifecycle version to make it a base ("normal") version
UPDATE "sap.plc.db::basis.t_calculation_version_temporary" calcVersion
    SET 
	    calcVersion.BASE_VERSION_ID = null,
		calcVersion.CALCULATION_VERSION_TYPE = 1, 
		calcVersion.LIFECYCLE_PERIOD_FROM = null
	FROM "sap.plc.db::basis.t_calculation_version_temporary" calcVersion
    	WHERE calcVersion.calculation_version_id = :iv_new_calculation_version_id and calcVersion.session_id = :iv_session_id  
	    	AND ( calcVersion.CALCULATION_VERSION_TYPE = 2 or calcVersion.CALCULATION_VERSION_TYPE = 16 ) -- update properties only for lifecycle versions
;

-- upsert the table for open calculation versions
UPSERT "sap.plc.db::basis.t_open_calculation_versions" (session_id, calculation_version_id, is_writeable) values (:iv_session_id, :iv_new_calculation_version_id, 1) with primary key;

{{#if Item.customFields}}
--copy item_ext to t_item_temporary_ext
INSERT INTO {{t_temporaryExtensionTable Item}} (session_id, item_id, calculation_version_id {{customFields Item}})
	SELECT :iv_session_id AS session_id, item_id, :iv_new_calculation_version_id AS calculation_version_id {{customFields Item}}
	    FROM {{t_extensionTable Item}} AS item_ext
		WHERE item_ext.calculation_version_id = :iv_old_calculation_version_id
			AND (	SELECT COUNT(session_id)
					FROM {{t_temporaryExtensionTable Item}}
					WHERE session_id = :iv_session_id AND calculation_version_id = :iv_new_calculation_version_id) = 0;
{{/if}}

-- ################################################################################################################
-- 		prepare output
-- ################################################################################################################

-- return temporary items
ot_new_items =	SELECT
			itemTemp.session_id, itemTemp.ITEM_ID, itemTemp.CALCULATION_VERSION_ID, itemTemp.PARENT_ITEM_ID, itemTemp.PREDECESSOR_ITEM_ID,
			itemTemp.IS_ACTIVE, itemTemp.HIGHLIGHT_GREEN, itemTemp.HIGHLIGHT_ORANGE, itemTemp.HIGHLIGHT_YELLOW, itemTemp.ITEM_CATEGORY_ID, itemTemp.CHILD_ITEM_CATEGORY_ID, itemTemp.REFERENCED_CALCULATION_VERSION_ID, itemTemp.ACCOUNT_ID, itemTemp.DETERMINED_ACCOUNT_ID, itemTemp.DOCUMENT_TYPE_ID, itemTemp.DOCUMENT_ID,
			itemTemp.DOCUMENT_VERSION, itemTemp.DOCUMENT_PART, itemTemp.DOCUMENT_STATUS_ID, itemTemp.DESIGN_OFFICE_ID,
			itemTemp.MATERIAL_ID, itemTemp.MATERIAL_TYPE_ID, itemTemp.MATERIAL_GROUP_ID, itemTemp.IS_PHANTOM_MATERIAL, itemTemp.IS_CONFIGURABLE_MATERIAL, itemTemp.MATERIAL_SOURCE, itemTemp.OVERHEAD_GROUP_ID, itemTemp.VALUATION_CLASS_ID, 
			itemTemp.PURCHASING_GROUP, itemTemp.PURCHASING_DOCUMENT, itemTemp.LOCAL_CONTENT, itemTemp.ACTIVITY_TYPE_ID,
			itemTemp.PROCESS_ID, itemTemp.LOT_SIZE, itemTemp.LOT_SIZE_CALCULATED, itemTemp.LOT_SIZE_IS_MANUAL,
			itemTemp.ENGINEERING_CHANGE_NUMBER_ID, itemTemp.COMPANY_CODE_ID, itemTemp.COST_CENTER_ID,
			itemTemp.PLANT_ID, itemTemp.WORK_CENTER_ID, itemTemp.WORK_CENTER_CATEGORY, itemTemp.EFFICIENCY, itemTemp.BUSINESS_AREA_ID, itemTemp.PROFIT_CENTER_ID, itemTemp.QUANTITY, itemTemp.QUANTITY_CALCULATED,
			itemTemp.QUANTITY_IS_MANUAL, itemTemp.QUANTITY_UOM_ID, itemTemp.TOTAL_QUANTITY, itemTemp.TOTAL_QUANTITY_UOM_ID,
			itemTemp.TOTAL_QUANTITY_DEPENDS_ON, itemTemp.IS_RELEVANT_TO_COSTING_IN_ERP, itemTemp.BASE_QUANTITY, itemTemp.BASE_QUANTITY_CALCULATED, itemTemp.BASE_QUANTITY_IS_MANUAL, itemTemp.QUANTITY_PER_BASE_UNIT, 
			itemTemp.QUANTITY_PER_BASE_UNIT_UOM_ID, itemTemp.PRICE_FIXED_PORTION, itemTemp.PRICE_FIXED_PORTION_CALCULATED, itemTemp.PRICE_FIXED_PORTION_IS_MANUAL,
			itemTemp.PRICE_VARIABLE_PORTION, itemTemp.PRICE_VARIABLE_PORTION_CALCULATED, itemTemp.PRICE_VARIABLE_PORTION_IS_MANUAL, itemTemp.PRICE, itemTemp.TRANSACTION_CURRENCY_ID,
			itemTemp.PRICE_UNIT, itemTemp.PRICE_UNIT_CALCULATED, itemTemp.PRICE_UNIT_IS_MANUAL, itemTemp.PRICE_UNIT_UOM_ID, itemTemp.IS_PRICE_SPLIT_ACTIVE, 
			itemTemp.IS_DISABLING_ACCOUNT_DETERMINATION, itemTemp.PRICE_ID, itemTemp.CONFIDENCE_LEVEL_ID, itemTemp.PRICE_SOURCE_ID, itemTemp.PRICE_SOURCE_TYPE_ID, itemTemp.SURCHARGE,
			itemTemp.IS_DISABLING_PRICE_DETERMINATION ,itemTemp.VENDOR_ID, itemTemp.TARGET_COST, itemTemp.TARGET_COST_CALCULATED, itemTemp.TARGET_COST_IS_MANUAL, itemTemp.TARGET_COST_CURRENCY_ID, itemTemp.CREATED_ON,
			itemTemp.CREATED_BY, itemTemp.LAST_MODIFIED_ON, itemTemp.LAST_MODIFIED_BY, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY, itemTemp.PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY2, itemTemp.PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY3, itemTemp.PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION, 
			itemTemp.OTHER_COST, itemTemp.OTHER_COST_FIXED_PORTION, itemTemp.OTHER_COST_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST, itemTemp.TOTAL_COST_FIXED_PORTION, itemTemp.TOTAL_COST_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST2, itemTemp.TOTAL_COST2_FIXED_PORTION, itemTemp.TOTAL_COST2_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST3, itemTemp.TOTAL_COST3_FIXED_PORTION, itemTemp.TOTAL_COST3_VARIABLE_PORTION, 
			itemTemp.item_description, itemTemp.comment, itemTemp.is_dirty, itemTemp.is_deleted,
			itemTemp.TOTAL_COST_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST_PER_UNIT, 
			itemTemp.TOTAL_COST2_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST2_PER_UNIT, 
			itemTemp.TOTAL_COST3_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST3_PER_UNIT, 
			itemTemp.TOTAL_QUANTITY_OF_VARIANTS, itemTemp.BOM_COMPARE_KEY
			{{customFieldsWithTablePrefix Item}}
	 	FROM "sap.plc.db::basis.t_item_temporary" as itemTemp
		LEFT OUTER JOIN {{t_temporaryExtensionTable Item}} as plcExtTable ON
			itemTemp.item_id = plcExtTable.item_id AND itemTemp.calculation_version_id = plcExtTable.calculation_version_id AND itemTemp.session_id = plcExtTable.session_id
 		WHERE itemTemp.calculation_version_id = :iv_new_calculation_version_id AND itemTemp.session_id = :iv_session_id AND is_deleted = 0;

-- return temporary calculation version
 ot_new_calculation_version = SELECT version.SESSION_ID, version.CALCULATION_VERSION_ID, version.CALCULATION_ID, version.CALCULATION_VERSION_NAME, version.STATUS_ID, version.CALCULATION_VERSION_TYPE, version.ROOT_ITEM_ID, version.CUSTOMER_ID,
            version.SALES_PRICE , version.SALES_PRICE_CURRENCY_ID , version.REPORT_CURRENCY_ID,
            version.COSTING_SHEET_ID, version.COMPONENT_SPLIT_ID , version.SALES_DOCUMENT, version.START_OF_PRODUCTION, version.END_OF_PRODUCTION, version.VALUATION_DATE,
            version.LAST_MODIFIED_ON , version.LAST_MODIFIED_BY, version.MASTER_DATA_TIMESTAMP, version.LIFECYCLE_PERIOD_FROM, version.BASE_VERSION_ID,
            version.VARIANT_ID, version.EXCHANGE_RATE_TYPE_ID, version.MATERIAL_PRICE_STRATEGY_ID, version.ACTIVITY_PRICE_STRATEGY_ID, version.SELECTED_TOTAL_COSTING_SHEET, version.SELECTED_TOTAL_COMPONENT_SPLIT,
            version.IS_FROZEN, item.is_dirty
 		FROM "sap.plc.db::basis.t_calculation_version_temporary" as version left outer join "sap.plc.db::basis.t_item_temporary" as item
 			ON version.session_id = item.session_id AND version.calculation_version_id = item.calculation_version_id AND version.root_item_id = item.item_id
 			WHERE version.calculation_version_id = :iv_new_calculation_version_id AND version.session_id = :iv_session_id;
insert into "sap.plc.db::temp.gtt_calculation_version_ids" (calculation_version_id)  
		select distinct REFERENCED_CALCULATION_VERSION_ID from :ot_new_items where REFERENCED_CALCULATION_VERSION_ID is not null;

-- copy the variants that belong to the calculation version type if any
call "sap.plc.db.calculationmanager.procedures::p_copy_variant_matrix"(:iv_old_calculation_version_id, :iv_new_calculation_version_id, :iv_session_id);

END;


