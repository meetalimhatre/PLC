PROCEDURE "sap.plc.db.calculationmanager.procedures::p_calculation_version_open" (
		IN calcVersionID 	INTEGER,
		IN sessionID 		NVARCHAR(50),
		IN currentUser 		NVARCHAR(256),
		IN copyData         INTEGER,
		OUT calcVersion 	"sap.plc.db.calculationmanager.procedures::ts_calculation_version_temporary" default empty,
		OUT items 			"sap.plc.db.calculationmanager.procedures::ts_item_temporary" default empty
		--OUT leaf_item_result 		 "sap.plc.db.calcengine.procedures::ts_leaf_item_results" default empty,
		--OUT costing_sheet_result   "sap.plc.db.calcengine.procedures::ts_costing_sheet_rollup" default empty,
		--OUT component_split_result "sap.plc.db.calcengine.procedures::ts_component_split_rollup" default empty
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
--	READS SQL DATA
	AS
BEGIN

--Open Calculation Version by copying data from permanent to temporary tables if requested
IF :copyData = 1 THEN
	CALL "sap.plc.db.calculationmanager.procedures::p_calculation_open_copy_to_temporary_tables"(:calcVersionID, :sessionID);
END IF;

items =	SELECT
			itemTemp.session_id, itemTemp.ITEM_ID, itemTemp.CALCULATION_VERSION_ID, itemTemp.PARENT_ITEM_ID, itemTemp.PREDECESSOR_ITEM_ID,
			itemTemp.IS_ACTIVE, itemTemp.HIGHLIGHT_GREEN, itemTemp.HIGHLIGHT_ORANGE, itemTemp.HIGHLIGHT_YELLOW, itemTemp.ITEM_CATEGORY_ID,itemTemp.CHILD_ITEM_CATEGORY_ID, itemTemp.REFERENCED_CALCULATION_VERSION_ID, itemTemp.ACCOUNT_ID, itemTemp.DETERMINED_ACCOUNT_ID, itemTemp.DOCUMENT_TYPE_ID, itemTemp.DOCUMENT_ID,
			itemTemp.DOCUMENT_VERSION, itemTemp.DOCUMENT_PART, itemTemp.DOCUMENT_STATUS_ID, itemTemp.DESIGN_OFFICE_ID,
			itemTemp.MATERIAL_ID, itemTemp.MATERIAL_TYPE_ID, itemTemp.MATERIAL_GROUP_ID, itemTemp.IS_PHANTOM_MATERIAL, itemTemp.IS_CONFIGURABLE_MATERIAL, itemTemp.MATERIAL_SOURCE,
			itemTemp.OVERHEAD_GROUP_ID, itemTemp.VALUATION_CLASS_ID, itemTemp.PURCHASING_GROUP, itemTemp.PURCHASING_DOCUMENT, itemTemp.LOCAL_CONTENT, itemTemp.ACTIVITY_TYPE_ID,
			itemTemp.PROCESS_ID, itemTemp.LOT_SIZE, itemTemp.LOT_SIZE_CALCULATED, itemTemp.LOT_SIZE_IS_MANUAL,
			itemTemp.ENGINEERING_CHANGE_NUMBER_ID, itemTemp.COMPANY_CODE_ID, itemTemp.COST_CENTER_ID,
			itemTemp.PLANT_ID, itemTemp.WORK_CENTER_ID, itemTemp.WORK_CENTER_CATEGORY, itemTemp.EFFICIENCY, itemTemp.BUSINESS_AREA_ID, itemTemp.PROFIT_CENTER_ID, itemTemp.QUANTITY, itemTemp.QUANTITY_CALCULATED,
			itemTemp.QUANTITY_IS_MANUAL, itemTemp.QUANTITY_UOM_ID, itemTemp.TOTAL_QUANTITY, itemTemp.TOTAL_QUANTITY_UOM_ID,
			itemTemp.TOTAL_QUANTITY_DEPENDS_ON, itemTemp.IS_RELEVANT_TO_COSTING_IN_ERP, itemTemp.BASE_QUANTITY, itemTemp.BASE_QUANTITY_CALCULATED, itemTemp.BASE_QUANTITY_IS_MANUAL, itemTemp.QUANTITY_PER_BASE_UNIT, 
			itemTemp.QUANTITY_PER_BASE_UNIT_UOM_ID, itemTemp.PRICE_FIXED_PORTION, itemTemp.PRICE_FIXED_PORTION_CALCULATED, itemTemp.PRICE_FIXED_PORTION_IS_MANUAL,
			itemTemp.PRICE_VARIABLE_PORTION, itemTemp.PRICE_VARIABLE_PORTION_CALCULATED, itemTemp.PRICE_VARIABLE_PORTION_IS_MANUAL, itemTemp.PRICE, itemTemp.TRANSACTION_CURRENCY_ID,
			itemTemp.PRICE_UNIT, itemTemp.PRICE_UNIT_CALCULATED, itemTemp.PRICE_UNIT_IS_MANUAL, itemTemp.PRICE_UNIT_UOM_ID, itemTemp.is_price_split_active, itemTemp.IS_DISABLING_ACCOUNT_DETERMINATION, 
			itemTemp.price_id, itemTemp.CONFIDENCE_LEVEL_ID, itemTemp.PRICE_SOURCE_ID, itemTemp.PRICE_SOURCE_TYPE_ID, itemTemp.SURCHARGE,
			itemTemp.IS_DISABLING_PRICE_DETERMINATION, itemTemp.VENDOR_ID, itemTemp.TARGET_COST, itemTemp.TARGET_COST_CALCULATED, itemTemp.TARGET_COST_IS_MANUAL, itemTemp.TARGET_COST_CURRENCY_ID, itemTemp.CREATED_ON,
			itemTemp.CREATED_BY, itemTemp.LAST_MODIFIED_ON, itemTemp.LAST_MODIFIED_BY, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY, itemTemp.PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY2, itemTemp.PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
			itemTemp.PRICE_FOR_TOTAL_QUANTITY3, itemTemp.PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, itemTemp.PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION, 
			itemTemp.OTHER_COST, itemTemp.OTHER_COST_FIXED_PORTION, itemTemp.OTHER_COST_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST, itemTemp.TOTAL_COST_FIXED_PORTION, itemTemp.TOTAL_COST_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST2, itemTemp.TOTAL_COST2_FIXED_PORTION, itemTemp.TOTAL_COST2_VARIABLE_PORTION, 
			itemTemp.TOTAL_COST3, itemTemp.TOTAL_COST3_FIXED_PORTION, itemTemp.TOTAL_COST3_VARIABLE_PORTION, 
			itemTemp.item_description, itemTemp.comment, itemTemp.is_dirty, itemTemp.is_deleted,
			itemTemp.TOTAL_COST_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST_PER_UNIT, 
			itemTemp.TOTAL_COST2_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST2_PER_UNIT, 
			itemTemp.TOTAL_COST3_PER_UNIT_FIXED_PORTION, itemTemp.TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, itemTemp.TOTAL_COST3_PER_UNIT, 
			itemTemp.TOTAL_QUANTITY_OF_VARIANTS, itemTemp.BOM_COMPARE_KEY
			{{customFieldsWithTablePrefix Item}}
	 	FROM "sap.plc.db::basis.t_item_temporary" as itemTemp
		LEFT OUTER JOIN {{t_temporaryExtensionTable Item}} as plcExtTable ON
			itemTemp.item_id = plcExtTable.item_id AND itemTemp.calculation_version_id = plcExtTable.calculation_version_id AND itemTemp.session_id = plcExtTable.session_id
 		WHERE itemTemp.calculation_version_id = :calcVersionID AND itemTemp.session_id = :sessionID AND is_deleted = 0;

 calcVersion = SELECT version.SESSION_ID, version.CALCULATION_VERSION_ID, version.CALCULATION_ID, version.CALCULATION_VERSION_NAME, version.STATUS_ID, version.CALCULATION_VERSION_TYPE, version.ROOT_ITEM_ID, version.CUSTOMER_ID,
                version.SALES_PRICE , version.SALES_PRICE_CURRENCY_ID , version.REPORT_CURRENCY_ID,
                version.COSTING_SHEET_ID, version.COMPONENT_SPLIT_ID , version.SALES_DOCUMENT, version.START_OF_PRODUCTION, version.END_OF_PRODUCTION, version.VALUATION_DATE, 
                version.LAST_MODIFIED_ON , version.LAST_MODIFIED_BY, version.MASTER_DATA_TIMESTAMP, version.LIFECYCLE_PERIOD_FROM, version.BASE_VERSION_ID,
                version.VARIANT_ID, version.EXCHANGE_RATE_TYPE_ID, version.MATERIAL_PRICE_STRATEGY_ID, version.ACTIVITY_PRICE_STRATEGY_ID, version.SELECTED_TOTAL_COSTING_SHEET, version.SELECTED_TOTAL_COMPONENT_SPLIT,
                version.IS_FROZEN, item.is_dirty
 				FROM "sap.plc.db::basis.t_calculation_version_temporary" as version left outer join "sap.plc.db::basis.t_item_temporary" as item
 				ON version.session_id = item.session_id AND version.calculation_version_id = item.calculation_version_id AND version.root_item_id = item.item_id
 				WHERE version.calculation_version_id = :calcVersionID AND version.session_id = :sessionID;
insert into "sap.plc.db::temp.gtt_calculation_version_ids" (calculation_version_id)
		select distinct REFERENCED_CALCULATION_VERSION_ID from :items where REFERENCED_CALCULATION_VERSION_ID is not null;		
		
END


