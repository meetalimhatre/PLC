PROCEDURE "sap.plc.db.calculationmanager.procedures::p_calculation_version_save" (
		IN calcVersionID 	INTEGER,
		IN sessionID 		NVARCHAR(50)
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
	
	lv_user_id NVARCHAR(255);
	lv_current_utctimestamp TIMESTAMP;
	
BEGIN

-- declare counter INTEGER;

select USER_ID into lv_user_id from "sap.plc.db::basis.t_session" where SESSION_ID = :sessionID;
-- store the call of current_utctimestamp in order to avoid calling the function for every item for the sake of performance and
-- avoid having different timestamps for different items
select current_utctimestamp into lv_current_utctimestamp from "sap.plc.db::DUMMY";

--update last_modified_by, last_modified_by for modified ("dirty") items
update "sap.plc.db::basis.t_item_temporary" SET "LAST_MODIFIED_ON" = :lv_current_utctimestamp, "LAST_MODIFIED_BY" = :lv_user_id
	where SESSION_ID = :sessionID and CALCULATION_VERSION_ID = :calcVersionID and IS_DIRTY=1;

--create created_on, created_by fields for calculation version parent item in "save as" case
update "sap.plc.db::basis.t_item_temporary"
	set "CREATED_ON" = :lv_current_utctimestamp, "CREATED_BY" = :lv_user_id
	where ITEM_ID NOT IN (select ITEM_ID from "sap.plc.db::basis.t_item" where CALCULATION_VERSION_ID = :calcVersionID and PARENT_ITEM_ID is null)
	and CALCULATION_VERSION_ID = :calcVersionID and SESSION_ID = :sessionID and PARENT_ITEM_ID is null;

--create created_on, created_by fields for calculation version items in "save as" case
update "sap.plc.db::basis.t_item_temporary"
	set "CREATED_ON" = :lv_current_utctimestamp, "CREATED_BY" = :lv_user_id
	where ITEM_ID NOT IN (select ITEM_ID from "sap.plc.db::basis.t_item" where CALCULATION_VERSION_ID = :calcVersionID)
	and CALCULATION_VERSION_ID = :calcVersionID and SESSION_ID = :sessionID and PARENT_ITEM_ID is not null;

--check and create created_on, created_by for items that have been newly created
update "sap.plc.db::basis.t_item_temporary"
	set "CREATED_ON" = :lv_current_utctimestamp, "CREATED_BY" = :lv_user_id, "LAST_MODIFIED_ON" = :lv_current_utctimestamp, "LAST_MODIFIED_BY" = :lv_user_id
	where ITEM_ID NOT IN (select ITEM_ID from "sap.plc.db::basis.t_item") and  CALCULATION_VERSION_ID = :calcVersionID and SESSION_ID = :sessionID;

--set last modified on and last saved by for the version
update "sap.plc.db::basis.t_calculation_version_temporary"
	set "LAST_MODIFIED_ON" = :lv_current_utctimestamp, "LAST_MODIFIED_BY" = :lv_user_id
	where CALCULATION_VERSION_ID = :calcVersionID and SESSION_ID = :sessionID;

--insert into t_item
upsert "sap.plc.db::basis.t_item" (ITEM_ID, CALCULATION_VERSION_ID, PARENT_ITEM_ID, PREDECESSOR_ITEM_ID, IS_ACTIVE, HIGHLIGHT_GREEN, HIGHLIGHT_ORANGE, HIGHLIGHT_YELLOW , ITEM_CATEGORY_ID ,CHILD_ITEM_CATEGORY_ID , REFERENCED_CALCULATION_VERSION_ID, ACCOUNT_ID, DETERMINED_ACCOUNT_ID, DOCUMENT_TYPE_ID, DOCUMENT_ID, DOCUMENT_VERSION, DOCUMENT_PART, DOCUMENT_STATUS_ID , DESIGN_OFFICE_ID, MATERIAL_ID , MATERIAL_TYPE_ID , MATERIAL_GROUP_ID , IS_PHANTOM_MATERIAL, IS_CONFIGURABLE_MATERIAL, MATERIAL_SOURCE, OVERHEAD_GROUP_ID , VALUATION_CLASS_ID, PURCHASING_GROUP, PURCHASING_DOCUMENT, LOCAL_CONTENT, ACTIVITY_TYPE_ID, PROCESS_ID, LOT_SIZE , LOT_SIZE_CALCULATED , LOT_SIZE_IS_MANUAL, ENGINEERING_CHANGE_NUMBER_ID, COMPANY_CODE_ID, COST_CENTER_ID, PLANT_ID, WORK_CENTER_ID, WORK_CENTER_CATEGORY, EFFICIENCY, BUSINESS_AREA_ID, PROFIT_CENTER_ID, QUANTITY , QUANTITY_CALCULATED , QUANTITY_IS_MANUAL , QUANTITY_UOM_ID, TOTAL_QUANTITY , TOTAL_QUANTITY_UOM_ID, TOTAL_QUANTITY_DEPENDS_ON , IS_RELEVANT_TO_COSTING_IN_ERP, BASE_QUANTITY, BASE_QUANTITY_CALCULATED, BASE_QUANTITY_IS_MANUAL, QUANTITY_PER_BASE_UNIT, QUANTITY_PER_BASE_UNIT_UOM_ID, PRICE_FIXED_PORTION, PRICE_FIXED_PORTION_CALCULATED , PRICE_FIXED_PORTION_IS_MANUAL , PRICE_VARIABLE_PORTION, PRICE_VARIABLE_PORTION_CALCULATED , PRICE_VARIABLE_PORTION_IS_MANUAL , PRICE, TRANSACTION_CURRENCY_ID, PRICE_UNIT, PRICE_UNIT_CALCULATED , PRICE_UNIT_IS_MANUAL , PRICE_UNIT_UOM_ID, SURCHARGE, IS_PRICE_SPLIT_ACTIVE, IS_DISABLING_ACCOUNT_DETERMINATION, PRICE_ID, CONFIDENCE_LEVEL_ID, PRICE_SOURCE_ID, PRICE_SOURCE_TYPE_ID, IS_DISABLING_PRICE_DETERMINATION, VENDOR_ID, TARGET_COST , TARGET_COST_CALCULATED, TARGET_COST_IS_MANUAL , TARGET_COST_CURRENCY_ID, CREATED_ON , CREATED_BY, LAST_MODIFIED_ON , LAST_MODIFIED_BY, 
		PRICE_FOR_TOTAL_QUANTITY, PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY2, PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY3, PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION, 
		OTHER_COST, OTHER_COST_FIXED_PORTION, OTHER_COST_VARIABLE_PORTION, 
		TOTAL_COST, TOTAL_COST_FIXED_PORTION, TOTAL_COST_VARIABLE_PORTION, 
		TOTAL_COST2, TOTAL_COST2_FIXED_PORTION, TOTAL_COST2_VARIABLE_PORTION, 
		TOTAL_COST3, TOTAL_COST3_FIXED_PORTION, TOTAL_COST3_VARIABLE_PORTION, 
		ITEM_DESCRIPTION, COMMENT, 
		TOTAL_COST_PER_UNIT_FIXED_PORTION, TOTAL_COST_PER_UNIT_VARIABLE_PORTION, TOTAL_COST_PER_UNIT, 
		TOTAL_COST2_PER_UNIT_FIXED_PORTION, TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, TOTAL_COST2_PER_UNIT, 
		TOTAL_COST3_PER_UNIT_FIXED_PORTION, TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, TOTAL_COST3_PER_UNIT, 
		TOTAL_QUANTITY_OF_VARIANTS, BOM_COMPARE_KEY)
	select ITEM_ID, CALCULATION_VERSION_ID, PARENT_ITEM_ID, PREDECESSOR_ITEM_ID, IS_ACTIVE, HIGHLIGHT_GREEN, HIGHLIGHT_ORANGE, HIGHLIGHT_YELLOW , ITEM_CATEGORY_ID ,CHILD_ITEM_CATEGORY_ID , REFERENCED_CALCULATION_VERSION_ID, ACCOUNT_ID, DETERMINED_ACCOUNT_ID, DOCUMENT_TYPE_ID, DOCUMENT_ID, DOCUMENT_VERSION, DOCUMENT_PART, DOCUMENT_STATUS_ID , DESIGN_OFFICE_ID, MATERIAL_ID , MATERIAL_TYPE_ID , MATERIAL_GROUP_ID , IS_PHANTOM_MATERIAL, IS_CONFIGURABLE_MATERIAL, MATERIAL_SOURCE, OVERHEAD_GROUP_ID , VALUATION_CLASS_ID , PURCHASING_GROUP, PURCHASING_DOCUMENT, LOCAL_CONTENT, ACTIVITY_TYPE_ID, PROCESS_ID, LOT_SIZE , LOT_SIZE_CALCULATED , LOT_SIZE_IS_MANUAL, ENGINEERING_CHANGE_NUMBER_ID, COMPANY_CODE_ID, COST_CENTER_ID, PLANT_ID, WORK_CENTER_ID, WORK_CENTER_CATEGORY, EFFICIENCY, BUSINESS_AREA_ID, PROFIT_CENTER_ID, QUANTITY , QUANTITY_CALCULATED , QUANTITY_IS_MANUAL , QUANTITY_UOM_ID, TOTAL_QUANTITY , TOTAL_QUANTITY_UOM_ID, TOTAL_QUANTITY_DEPENDS_ON , IS_RELEVANT_TO_COSTING_IN_ERP, BASE_QUANTITY, BASE_QUANTITY_CALCULATED, BASE_QUANTITY_IS_MANUAL, QUANTITY_PER_BASE_UNIT, QUANTITY_PER_BASE_UNIT_UOM_ID, PRICE_FIXED_PORTION, PRICE_FIXED_PORTION_CALCULATED , PRICE_FIXED_PORTION_IS_MANUAL , PRICE_VARIABLE_PORTION, PRICE_VARIABLE_PORTION_CALCULATED , PRICE_VARIABLE_PORTION_IS_MANUAL , PRICE, TRANSACTION_CURRENCY_ID, PRICE_UNIT, PRICE_UNIT_CALCULATED , PRICE_UNIT_IS_MANUAL , PRICE_UNIT_UOM_ID, SURCHARGE, IS_PRICE_SPLIT_ACTIVE, IS_DISABLING_ACCOUNT_DETERMINATION, PRICE_ID, CONFIDENCE_LEVEL_ID, PRICE_SOURCE_ID, PRICE_SOURCE_TYPE_ID, IS_DISABLING_PRICE_DETERMINATION, VENDOR_ID, TARGET_COST , TARGET_COST_CALCULATED, TARGET_COST_IS_MANUAL , TARGET_COST_CURRENCY_ID, CREATED_ON , CREATED_BY, LAST_MODIFIED_ON , LAST_MODIFIED_BY, 
		PRICE_FOR_TOTAL_QUANTITY, PRICE_FOR_TOTAL_QUANTITY_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY2, PRICE_FOR_TOTAL_QUANTITY2_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY2_VARIABLE_PORTION, 
		PRICE_FOR_TOTAL_QUANTITY3, PRICE_FOR_TOTAL_QUANTITY3_FIXED_PORTION, PRICE_FOR_TOTAL_QUANTITY3_VARIABLE_PORTION, 
		OTHER_COST, OTHER_COST_FIXED_PORTION, OTHER_COST_VARIABLE_PORTION, 
		TOTAL_COST, TOTAL_COST_FIXED_PORTION, TOTAL_COST_VARIABLE_PORTION, 
		TOTAL_COST2, TOTAL_COST2_FIXED_PORTION, TOTAL_COST2_VARIABLE_PORTION, 
		TOTAL_COST3, TOTAL_COST3_FIXED_PORTION, TOTAL_COST3_VARIABLE_PORTION, 
		ITEM_DESCRIPTION, COMMENT, 
		TOTAL_COST_PER_UNIT_FIXED_PORTION, TOTAL_COST_PER_UNIT_VARIABLE_PORTION, TOTAL_COST_PER_UNIT, 
		TOTAL_COST2_PER_UNIT_FIXED_PORTION, TOTAL_COST2_PER_UNIT_VARIABLE_PORTION, TOTAL_COST2_PER_UNIT, 
		TOTAL_COST3_PER_UNIT_FIXED_PORTION, TOTAL_COST3_PER_UNIT_VARIABLE_PORTION, TOTAL_COST3_PER_UNIT, 
		TOTAL_QUANTITY_OF_VARIANTS, BOM_COMPARE_KEY
	from "sap.plc.db::basis.t_item_temporary"
	where SESSION_ID = :sessionID and CALCULATION_VERSION_ID = :calcVersionID;

{{#if Item.customFields}}
--insert into t_item_ext
upsert {{t_extensionTable Item}} (ITEM_ID, CALCULATION_VERSION_ID {{customFieldsCalc Item}})
	select ITEM_ID, CALCULATION_VERSION_ID {{customFieldsCalc Item}}
	from {{t_temporaryExtensionTable Item}}
	where SESSION_ID = :sessionID and CALCULATION_VERSION_ID = :calcVersionID;
{{/if}}

--insert into t_calculation_version
upsert "sap.plc.db::basis.t_calculation_version" (CALCULATION_VERSION_ID, CALCULATION_ID, CALCULATION_VERSION_NAME, STATUS_ID, CALCULATION_VERSION_TYPE, ROOT_ITEM_ID, CUSTOMER_ID, SALES_PRICE , SALES_PRICE_CURRENCY_ID , REPORT_CURRENCY_ID, COSTING_SHEET_ID, COMPONENT_SPLIT_ID , SALES_DOCUMENT, START_OF_PRODUCTION, END_OF_PRODUCTION, VALUATION_DATE, LAST_MODIFIED_ON , LAST_MODIFIED_BY, MASTER_DATA_TIMESTAMP, LIFECYCLE_PERIOD_FROM, BASE_VERSION_ID, IS_FROZEN, EXCHANGE_RATE_TYPE_ID, MATERIAL_PRICE_STRATEGY_ID, ACTIVITY_PRICE_STRATEGY_ID, SELECTED_TOTAL_COSTING_SHEET, SELECTED_TOTAL_COMPONENT_SPLIT)
	select CALCULATION_VERSION_ID, CALCULATION_ID, CALCULATION_VERSION_NAME, STATUS_ID, CALCULATION_VERSION_TYPE, ROOT_ITEM_ID, CUSTOMER_ID, SALES_PRICE , SALES_PRICE_CURRENCY_ID , REPORT_CURRENCY_ID, COSTING_SHEET_ID, COMPONENT_SPLIT_ID , SALES_DOCUMENT, START_OF_PRODUCTION, END_OF_PRODUCTION, VALUATION_DATE, LAST_MODIFIED_ON , LAST_MODIFIED_BY, MASTER_DATA_TIMESTAMP, LIFECYCLE_PERIOD_FROM, BASE_VERSION_ID, IS_FROZEN, EXCHANGE_RATE_TYPE_ID, MATERIAL_PRICE_STRATEGY_ID, ACTIVITY_PRICE_STRATEGY_ID, SELECTED_TOTAL_COSTING_SHEET, SELECTED_TOTAL_COMPONENT_SPLIT
	from "sap.plc.db::basis.t_calculation_version_temporary"
	where SESSION_ID = :sessionID and CALCULATION_VERSION_ID = :calcVersionID;

--reset IS_DIRTY flag
update "sap.plc.db::basis.t_item_temporary" SET "IS_DIRTY" = 0
	where SESSION_ID = :sessionID and CALCULATION_VERSION_ID = :calcVersionID and IS_DIRTY=1;

END


