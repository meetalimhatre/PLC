FORMULA_ID,PATH,BUSINESS_OBJECT,COLUMN_ID,ITEM_CATEGORY_ID,IS_FORMULA_USED,FORMULA_STRING,FORMULA_DESCRIPTION
1510,"Item","Item","CUST_YEAR",0,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1511,"Item","Item","CUST_YEAR",1,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1512,"Item","Item","CUST_YEAR",2,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1513,"Item","Item","CUST_YEAR",3,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1514,"Item","Item","CUST_YEAR",4,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1515,"Item","Item","CUST_YEAR",5,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1516,"Item","Item","CUST_YEAR",6,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1517,"Item","Item","CUST_YEAR",7,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1518,"Item","Item","CUST_YEAR",8,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1519,"Item","Item","CUST_YEAR",9,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1530,"Item","Item","CUST_TARGET_DELTA",0,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1531,"Item","Item","CUST_TARGET_DELTA",1,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1532,"Item","Item","CUST_TARGET_DELTA",2,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1533,"Item","Item","CUST_TARGET_DELTA",3,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1534,"Item","Item","CUST_TARGET_DELTA",4,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1535,"Item","Item","CUST_TARGET_DELTA",5,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1536,"Item","Item","CUST_TARGET_DELTA",6,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1537,"Item","Item","CUST_TARGET_DELTA",7,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1538,"Item","Item","CUST_TARGET_DELTA",8,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1614,"Item","Item","CUST_DESCRIPTION",8,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1615,"Item","Item","CUST_DESCRIPTION",9,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1606,"Item","Item","CUST_DESCRIPTION",0,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1607,"Item","Item","CUST_DESCRIPTION",1,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1608,"Item","Item","CUST_DESCRIPTION",2,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1609,"Item","Item","CUST_DESCRIPTION",3,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1610,"Item","Item","CUST_DESCRIPTION",4,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1611,"Item","Item","CUST_DESCRIPTION",5,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1612,"Item","Item","CUST_DESCRIPTION",6,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1613,"Item","Item","CUST_DESCRIPTION",7,1,"IF(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1628,"Item","Item","CUST_G",2,1,"IF(IF(AND(IS_NOT_NULL($CUST_EOP); IS_NOT_NULL($CUST_SOP));AND($Version.VALUATION_DATE >=$CUST_SOP; $Version.VALUATION_DATE <$CUST_EOP);IF(AND(IS_NULL($CUST_SOP); IS_NOT_NULL($CUST_EOP));$Version.VALUATION_DATE < $CUST_EOP;IF( AND(IS_NULL($CUST_EOP); IS_NOT_NULL($CUST_SOP));$Version.VALUATION_DATE >= $CUST_SOP; 1=1)));''X'';''-'')",""
1775,"Item","Item","CUST_COUNT",2,1,"TO_DECIMAL($CUST_SUPPLIER_1_SELECTED)+TO_DECIMAL($CUST_SUPPLIER_2_SELECTED)+TO_DECIMAL($CUST_SUPPLIER_3_SELECTED)",""
1779,"Item","Item","CUST_DIRECT_LABOR",0,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1780,"Item","Item","CUST_DIRECT_LABOR",1,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1781,"Item","Item","CUST_DIRECT_LABOR",2,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1782,"Item","Item","CUST_DIRECT_LABOR",3,1,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1783,"Item","Item","CUST_DIRECT_LABOR",4,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1773,"Item","Item","CUST_SUPPLIER_INVEST",8,1,"$TOTAL_COST/PARENT($TOTAL_COST;1)*PARENT($CUST_SUPPLIER_INVEST;0)",""
1774,"Item","Item","CUST_SUPPLIER_INVEST",2,1,"$TOTAL_COST/PARENT($TOTAL_COST;1)*PARENT($CUST_SUPPLIER_INVEST;0)",""
1784,"Item","Item","CUST_DIRECT_LABOR",5,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1777,"Item","Item","CUST_MARGIN",0,1,"(($Version.SALES_PRICE/$Version.TOTAL_COST)-1)*100",""
1794,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE",0,0,"$PRICE_VARIABLE_PORTION",""
1795,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE",2,0,"$PRICE_VARIABLE_PORTION",""
1796,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE",3,0,"$PRICE_VARIABLE_PORTION",""
1785,"Item","Item","CUST_DIRECT_LABOR",6,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1786,"Item","Item","CUST_DIRECT_LABOR",7,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1787,"Item","Item","CUST_DIRECT_LABOR",8,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1788,"Item","Item","CUST_DIRECT_LABOR",9,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)","$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)"
1793,"Item","Item","CUST_DIRLABORPERUNIT",2,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)",""
1790,"Item","Item","CUST_DIRLABORPERUNIT",3,1,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)",""
1789,"Item","Item","CUST_DIRLABORPERUNIT",0,0,"$CAPR_DL/$CAPR_VOLUME*($CAPR_PROD_RATE/$CAPR_ALC_RATE)",""
1078,"Item","Item","CUST_MPN",2,0," ",""
6,"Item","Item","QUANTITY",1,1,"10","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
7,"Item","Item","QUANTITY",2,1,"10","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
8,"Item","Item","PRICE_FIXED_PORTION",1,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
9,"Item","Item","PRICE_FIXED_PORTION",2,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
10,"Item","Item","PRICE_FIXED_PORTION",3,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
11,"Item","Item","PRICE_FIXED_PORTION",4,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
12,"Item","Item","PRICE_FIXED_PORTION",5,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
13,"Item","Item","PRICE_FIXED_PORTION",6,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overridden by a formula are not rolled-up. Those are QUANTITY TARGET_COST and LOT_SIZE. As representative example we take the first for testing. In particular formula-computed values are possible and valid for assemblies and they also can be manually overriden for assemblies."
14,"Item","Item","PRICE_FIXED_PORTION",7,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overriden by a formula represent a special case. Those are PRICE_FIXED_PORTION PRICE_VARIABLE_PORTION and PRICE_UNIT."
15,"Item","Item","PRICE_FIXED_PORTION",8,1,"IF (IS_MATERIAL(); 10; 1)","3 of the 6 standard fields which can be overriden by a formula represent a special case. Those are PRICE_FIXED_PORTION PRICE_VARIABLE_PORTION and PRICE_UNIT."
16,"Item","Item","PRICE_VARIABLE_PORTION",1,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
17,"Item","Item","PRICE_VARIABLE_PORTION",2,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
18,"Item","Item","PRICE_VARIABLE_PORTION",3,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
19,"Item","Item","PRICE_VARIABLE_PORTION",4,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
20,"Item","Item","PRICE_VARIABLE_PORTION",5,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
21,"Item","Item","PRICE_VARIABLE_PORTION",6,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
22,"Item","Item","PRICE_VARIABLE_PORTION",7,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
23,"Item","Item","PRICE_VARIABLE_PORTION",8,1,"IF (IS_INTERNAL_ACTIVITY(); 2; 1)","See Comment of PRICE_FIXED_PORTION"
24,"Item","Item","PRICE_UNIT",1,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
25,"Item","Item","PRICE_UNIT",2,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
26,"Item","Item","PRICE_UNIT",3,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
27,"Item","Item","PRICE_UNIT",4,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
28,"Item","Item","PRICE_UNIT",5,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
29,"Item","Item","PRICE_UNIT",6,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
30,"Item","Item","PRICE_UNIT",7,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
31,"Item","Item",PRICE_UNIT,8,1,"IF (IS_EXTERNAL_ACTIVITY(); 5; 1)","PRICE_UNIT is not rolled-up. Instead PRICE_UNIT is always set to 1 by the calculation engine  for assemblies. Therefore having a formula-computed value i.e. PRICE_UNIT_CALCULATED does not make sense for assemblies."
1810,"Item","Item","CUST_YEAR_A",0,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1811,"Item","Item","CUST_YEAR_A",1,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1812,"Item","Item","CUST_YEAR_A",2,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1813,"Item","Item","CUST_YEAR_A",3,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1814,"Item","Item","CUST_YEAR_A",4,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1815,"Item","Item","CUST_YEAR_A",5,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1816,"Item","Item","CUST_YEAR_A",6,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1817,"Item","Item","CUST_YEAR_A",7,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1818,"Item","Item","CUST_YEAR_A",8,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1819,"Item","Item","CUST_YEAR_A",9,1,"YEAR($Version.LIFECYCLE_PERIOD_FROM)",""
1830,"Item","Item","CUST_TARGET_DELTA_A",0,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1831,"Item","Item","CUST_TARGET_DELTA_A",1,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1832,"Item","Item","CUST_TARGET_DELTA_A",2,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1833,"Item","Item","CUST_TARGET_DELTA_A",3,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1834,"Item","Item","CUST_TARGET_DELTA_A",4,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1835,"Item","Item","CUST_TARGET_DELTA_A",5,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1836,"Item","Item","CUST_TARGET_DELTA_A",6,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1837,"Item","Item","CUST_TARGET_DELTA_A",7,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1838,"Item","Item","CUST_TARGET_DELTA_A",8,1,"IF($TARGET_COST>0;$TOTAL_COST_PER_UNIT-$TARGET_COST;0)",""
1914,"Item","Item","CUST_DESCRIPTION_A",8,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1915,"Item","Item","CUST_DESCRIPTION_A",9,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1906,"Item","Item","CUST_DESCRIPTION_A",0,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1907,"Item","Item","CUST_DESCRIPTION_A",1,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1908,"Item","Item","CUST_DESCRIPTION_A",2,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1909,"Item","Item","CUST_DESCRIPTION_A",3,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1910,"Item","Item","CUST_DESCRIPTION_A",4,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1911,"Item","Item","CUST_DESCRIPTION_A",5,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1912,"Item","Item","CUST_DESCRIPTION_A",6,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1913,"Item","Item","CUST_DESCRIPTION_A",7,1,"IF(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;ANCESTOR(IS_NOT_NULL($CUST_MODULE_A);$ITEM_DESCRIPTION;0))","HAS_CHILDREN();$ITEM_DESCRIPTION;"
1928,"Item","Item","CUST_G_A",2,1,"IF(IF(AND(IS_NOT_NULL($CUST_EOP_A);IS_NOT_NULL($CUST_SOP_A));AND($Version.VALUATION_DATE>=$CUST_SOP_A;$Version.VALUATION_DATE<$CUST_EOP_A);IF(AND(IS_NULL($CUST_SOP_A);IS_NOT_NULL($CUST_EOP_A));$Version.VALUATION_DATE<$CUST_EOP_A;IF(AND(IS_NULL($CUST_EOP_A);IS_NOT_NULL($CUST_SOP_A));$Version.VALUATION_DATE>=$CUST_SOP_A;1=1)));''X'';''-'')",""
2075,"Item","Item","CUST_COUNT_A",2,1,"TO_DECIMAL($CUST_SUPPLIER_1_SELECTED_A)+TO_DECIMAL($CUST_SUPPLIER_2_SELECTED_A)+TO_DECIMAL($CUST_SUPPLIER_3_SELECTED_A)",""
2079,"Item","Item","CUST_DIRECT_LABOR_A",0,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2080,"Item","Item","CUST_DIRECT_LABOR_A",1,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2081,"Item","Item","CUST_DIRECT_LABOR_A",2,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2082,"Item","Item","CUST_DIRECT_LABOR_A",3,1,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2083,"Item","Item","CUST_DIRECT_LABOR_A",4,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2073,"Item","Item","CUST_SUPPLIER_INVEST_A",8,1,"$TOTAL_COST/PARENT($TOTAL_COST;1)*PARENT($CUST_SUPPLIER_INVEST_A;0)",""
2074,"Item","Item","CUST_SUPPLIER_INVEST_A",2,1,"$TOTAL_COST/PARENT($TOTAL_COST;1)*PARENT($CUST_SUPPLIER_INVEST_A;0)",""
2084,"Item","Item","CUST_DIRECT_LABOR_A",5,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2077,"Item","Item","CUST_MARGIN_A",0,1,"(($Version.SALES_PRICE/$Version.TOTAL_COST)-1)*100",""
2094,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE_A",0,0,"$PRICE_VARIABLE_PORTION",""
2095,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE_A",2,0,"$PRICE_VARIABLE_PORTION",""
2096,"Item","Item","CUST_S4SUPPLIEDSTDLABORRATE_A",3,0,"$PRICE_VARIABLE_PORTION",""
2085,"Item","Item","CUST_DIRECT_LABOR_A",6,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2086,"Item","Item","CUST_DIRECT_LABOR_A",7,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2087,"Item","Item","CUST_DIRECT_LABOR_A",8,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2088,"Item","Item","CUST_DIRECT_LABOR_A",9,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)","$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)"
2093,"Item","Item","CUST_DIRLABORPERUNIT_A",2,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)",""
2090,"Item","Item","CUST_DIRLABORPERUNIT_A",3,1,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)",""
2089,"Item","Item","CUST_DIRLABORPERUNIT_A",0,0,"$CAPR_DL_A/$CAPR_VOLUME_A*($CAPR_PROD_RATE_A/$CAPR_ALC_RATE_A)",""
1378,"Item","Item","CUST_MPN_A",2,0," ",""