(function () {
	try{
		var schema = $.request.parameters.get("schema");
		var table = $.request.parameters.get("table");
		var server = $.request.parameters.get("server");
		if(schema===undefined){
			schema=$.session.getUsername();
		}
		if(table===undefined){
			table='';
		}else{
			table='AND TABLE_OID in ('+table+')';
		}
		var dstartfile=new Date().getTime();
		//declare object file - xlsx
		var ofile = { 
				
				worksheets:[],
				creator : 'SAP' , created : new Date ( '04/08/2014' ) , 
				lastModifiedBy : 'SAP' , modified : new Date ( ) , 
		} ;
		
		var ooutlineLevel = {
			outlineLevel_id: 0,
			rows : []
		};
		var atable_names = []; //new Array();
		var squery='SELECT TABLE_NAME FROM "SYS"."TABLES" where SCHEMA_NAME = \''+schema+'\' '+table+' order by TABLE_NAME';						
	    var conn = $.db.getConnection();  
	    var pstmt = conn.prepareStatement(squery);
	    var rs = pstmt.executeQuery();

		while (rs.next()){
			atable_names.push(rs.getString(1));
		}
		var lastPage=0;
		var alreadyWhere=[]; //new Array();
		for (var jj=0;jj<atable_names.length;jj++){
			lastPage=jj;
			ofile.worksheets.push({ outlineLevel : [ooutlineLevel], data : []});
			ofile.activeWorksheet=jj;
			var swsname=atable_names[jj];
			while(swsname.search('::')>0){
				swsname=swsname.split('::');
				swsname=swsname[1];
			}
			while(swsname.search(':')>0){
				swsname=swsname.replace(":",";");
			}			
			if(swsname.length>30){
				swsname=swsname.substr(swsname.length-30);
			}
			while(alreadyWhere.indexOf(swsname)!=-1){
				swsname+='_';
			}
			alreadyWhere.push(swsname);
			ofile.worksheets[jj].name=swsname;
			var w=ofile.worksheets[jj].data;
			var aoutline=new Array();		
			var acolumn_names =new Array();	
			
			// Write column names
			var squery='SELECT IS_NULLABLE, DATA_TYPE_NAME, COLUMN_NAME, LENGTH FROM SYS.TABLE_COLUMNS WHERE SCHEMA_NAME = \''+schema+'\' AND TABLE_NAME = \''+atable_names[jj]+'\' ORDER BY POSITION';						
		    var pstmt = conn.prepareStatement(squery);  
		    var rs = pstmt.executeQuery(); 
		   	while (rs.next()){
				acolumn_names.push(rs.getString(3));
			}
		   	
		   	
		   	for (var i=0;i<3;i++){
		   		var r = w.push([])-1 ;  // add new row	
		   		// rs.first(); // This is not working somehow, thus the statement below is used
		   		var rs = pstmt.executeQuery();
		   		
		   		while (rs.next()){
		   			var value;
		   			if(i==1) {value= rs.getString(i+1)+"("+rs.getString(4)+")";} else {value = rs.getString(i+1);}
		   			var cell={value:value ,formatCode:'@',fontName:'Calibri',
							fontSize:'8',bold: true, autoWidth: true,interiorColor: '595959', fontColor: 'ffffff'}; 
					w[r].push(cell);
		   		}
		   	}
		   	
		   	/*
		   	while (rs.next()){
				acolumn_names.push(rs.getString(1));
			}
			var r = w.push([])-1 ;		
			for (var j=0;j<acolumn_names.length;j++){	
				var cell={value:acolumn_names[j] ,formatCode:'@',fontName:'Calibri',
						fontSize:'8',bold: true, autoWidth: true,interiorColor: '595959', fontColor: 'ffffff'}; 
				w[r].push(cell);
			}
			*/
			
			// Write data
			var squeryData='SELECT * FROM \"'+schema+'\".\"'+atable_names[jj]+'\" LIMIT 100';						
		    var pstmtData = conn.prepareStatement(squeryData);  
		    var rsData = pstmtData.executeQuery();  	    
		   	while (rsData.next()){
		   		var r = w.push([])-1 ;  // add new row
		   		for (var i=0;i<acolumn_names.length;i++){
		   			var value = rsData.getString(i+1); // '\''+
					var cell={value:value ,formatCode:'@',fontName:'Calibri',
							fontSize:'8',bold: false, autoWidth: true, fontColor: '000000'}; 
					w[r].push(cell);
		   		}
	   		
			}

			ofile.worksheets[jj].outlineLevel=aoutline;
		}
		
		//last page
		lastPage++;
		ofile.worksheets.push({ outlineLevel : [ooutlineLevel], data : []});
		ofile.activeWorksheet=lastPage;		
		ofile.worksheets[lastPage].name='Header';
		var w=ofile.worksheets[lastPage].data;
		var aoutline=new Array();		
		var r = w.push([])-1 ;		
		var cell={value:'Generated by' ,formatCode:'General',fontName:'Calibri',
					fontSize:'9',bold: true, autoWidth: true}; 
		w[r].push(cell);
		cell={value:$.session.getUsername() ,formatCode:'General',fontName:'Calibri',
				fontSize:'9', autoWidth: true}; 
		w[r].push(cell);
		r = w.push([])-1 ;
		cell={value:'Server' ,formatCode:'General',fontName:'Calibri',
				fontSize:'9',bold: true, autoWidth: true}; 
		w[r].push(cell);
		cell={value:server ,formatCode:'General',fontName:'Calibri',
			fontSize:'9', autoWidth: true}; 
		w[r].push(cell);
		r = w.push([])-1 ;
		cell={value:'Schema' ,formatCode:'General',fontName:'Calibri',
				fontSize:'9',bold: true, autoWidth: true}; 
		w[r].push(cell);
		cell={value:schema ,formatCode:'General',fontName:'Calibri',
			fontSize:'9', autoWidth: true}; 
		w[r].push(cell);
		r = w.push([])-1 ;
		cell={value:'When' ,formatCode:'General',fontName:'Calibri',
				fontSize:'9',bold: true, autoWidth: true}; 
		w[r].push(cell);
		cell={value:new Date ( ) ,formatCode:'General',fontName:'Calibri',
			fontSize:'9', autoWidth: true}; 
		w[r].push(cell);
		r = w.push([])-1 ;
		cell={value:'Tables' ,formatCode:'General',fontName:'Calibri',
				fontSize:'9',bold: true, autoWidth: true};
		w[r].push(cell);
		var firstLine=true;		
		var squery='SELECT TABLE_NAME FROM "SYS"."TABLES" where SCHEMA_NAME = \''+schema+'\' '+table+' order by TABLE_NAME';
		var pstmt = conn.prepareStatement(squery);  
		var rs = pstmt.executeQuery();  	    
		while (rs.next()){
			if(!firstLine){
				r = w.push([])-1 ;
				cell={value:'' ,formatCode:'General',fontName:'Calibri',
						fontSize:'9',bold: true, autoWidth: true}; 
				w[r].push(cell);
			}else{
				firstLine=false;
			}
			cell={value:rs.getString(1) ,formatCode:'General',fontName:'Calibri',
				fontSize:'9', autoWidth: true}; 
			w[r].push(cell);
		}
		
		ofile.worksheets[lastPage].outlineLevel=aoutline;
		
		ofile.activeWorksheet=0;
		
	  
		/////////////////////////////// Generate test data
	   var dendfile=new Date().getTime();
	   var objectgeneration= dendfile - dstartfile; // time for the file object to be generated		
		conn.close(); 
		
		//for performance measurements
		var oJSON_result ={
				result: '',
				objectgeneration: objectgeneration,
				xlsxtime:0,	
		};

		// ajax call with parameters
		var scall= $.request.parameters.get('call');
		switch (scall){
		case "client": // Produce Excel file on client side
			$.response.status = $.net.http.OK;
			$.response.contentType = 'application/json';
			$.response.setBody(JSON.stringify(ofile));
			break;
		case "server": // Produce Excel ofile on server side
			/*$.import("sap.experimental.excel_integration.libs", "xlsx");
			var startxlsx=new Date().getTime();
			var result=$.sap.experimental.excel_integration.libs.xlsx.xlsx(file);
			var endxlsx=new Date().getTime();
			var xlsxtime=endxlsx-startxlsx; // time for the object to become an xlsx file
			$.response.contentType = "Content-Type: text/plain";
			$.response.setBody(result.href());
			$.response.status = 200;*/
			
			var startxlsx=new Date().getTime();
			$.import("sap.experimental.excel_integration.lib", "xlsx");			
			oJSON_result.result=$.sap.experimental.excel_integration.lib.xlsx.xlsx(ofile).href();
			var endxlsx=new Date().getTime();
			oJSON_result.xlsxtime=endxlsx-startxlsx; // time for the object to become an xlsx file
			$.response.contentType ='application/json';
			$.response.setBody(JSON.stringify(oJSON_result));
					
			break;
		default: // set as default either the server or the client side generation of the file
			/*$.response.status=$.net.http.INTERNAL_SERVER_ERROR;
			$.response.setBody('Ajax call error!');*/
			$.response.status = $.net.http.OK;
			$.response.contentType = 'application/json';
			$.response.setBody(JSON.stringify(ofile));
		}	
	}catch(ex){			
		var errorMessage=ex;
		$.response.setBody(errorMessage.toString());
	}

})();

	