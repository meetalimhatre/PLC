PROCEDURE "sap.plc.db.calculationmanager.procedures::p_calculation_version_reset_missing_nontemporary_masterdata" ( 
	    IN iv_calculation_version_id			INTEGER,		-- calculation version for which the masterdata should be reset
	    IN iv_session_id 						NVARCHAR(50),	-- current session
    	OUT ov_changed_costing_sheet_count 		INTEGER,		-- number of reset costing sheets
    	OUT ov_changed_component_split_count 	INTEGER,		-- number of reset component splits
    	OUT ot_items_with_reset_accounts 		"sap.plc.db.calculationmanager.procedures::ts_item_ids_output" default empty -- array of ids of items with reset accounts
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
	
	lv_controlling_area_id NVARCHAR(4); 
	lv_master_data_timestamp TIMESTAMP;
	
BEGIN

/**********************************************************************************
	Sets to null ("resets") the references for master data, which can not be temporary and are missing, for given temporary calculation version.
**********************************************************************************/

-- Make selects at the beginning for better performance
lt_calcVersion_data = select project.controlling_area_id, calcVersion.master_data_timestamp 
	 	from "sap.plc.db::basis.t_calculation_version_temporary" as calcVersion
	 	inner join "sap.plc.db::basis.t_calculation" as calc
	 		on calc.calculation_id = calcVersion.calculation_id
	 	inner join "sap.plc.db::basis.t_project" as project	 		 	
	 		on project.project_id = calc.project_id
	 	where calcVersion.calculation_version_id = :iv_calculation_version_id and calcVersion.session_id = :iv_session_id
;

lv_controlling_area_id = :lt_calcVersion_data.controlling_area_id[1];
lv_master_data_timestamp = :lt_calcVersion_data.master_data_timestamp[1];
 	
ot_items_with_reset_accounts = select item.item_id 
				from "sap.plc.db::basis.t_item_temporary" item 
				where calculation_version_id = :iv_calculation_version_id and session_id = :iv_session_id
				and	account_id not in 
					(select account.account_id from "sap.plc.db::basis.t_account" as account
						where account.controlling_area_id = lv_controlling_area_id 
						and lv_master_data_timestamp >= account._valid_from 
            			and (account._valid_to is null or lv_master_data_timestamp < account._valid_to)) 
;


-- Reset for calculationVersion.costing_sheet
update "sap.plc.db::basis.t_calculation_version_temporary" as calcVersion 
	set costing_sheet_id = null 
	where calcVersion.calculation_version_id = :iv_calculation_version_id and calcVersion.session_id = :iv_session_id
		and	costing_sheet_id not in 
			(select costingSheet.costing_sheet_id from "sap.plc.db::basis.t_costing_sheet" as costingSheet
				where costingSheet.controlling_area_id = lv_controlling_area_id 
					and calcVersion.master_data_timestamp >= costingSheet._valid_from 
            		and (costingSheet._valid_to is null or calcVersion.master_data_timestamp < costingSheet._valid_to))
;

ov_changed_costing_sheet_count := ::rowcount;

-- Reset for calculationVersion.component_split
update "sap.plc.db::basis.t_calculation_version_temporary" as calcVersion 
	set component_split_id = null 
	where calcVersion.calculation_version_id = :iv_calculation_version_id and calcVersion.session_id = :iv_session_id 
		and	component_split_id not in 
			(select compSplit.component_split_id from "sap.plc.db::basis.t_component_split" as compSplit
				where compSplit.controlling_area_id = lv_controlling_area_id 
					and calcVersion.master_data_timestamp >= compSplit._valid_from 
            		and (compSplit._valid_to is null or calcVersion.master_data_timestamp < compSplit._valid_to))
;

ov_changed_component_split_count := ::rowcount;

-- Reset for item.accounts
update "sap.plc.db::basis.t_item_temporary" item 
	set account_id = null 
	where calculation_version_id = :iv_calculation_version_id and session_id = :iv_session_id 
		and	item_id in 
			(select item_id from :ot_items_with_reset_accounts)
;

END;
