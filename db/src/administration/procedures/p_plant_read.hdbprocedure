PROCEDURE "sap.plc.db.administration.procedures::p_plant_read" ( 
        IN iv_logon_language         NVARCHAR(11),
		IN iv_master_data_timestamp  TIMESTAMP,
		IN iv_filter_string	         NVARCHAR(5000),
		IN iv_no_max_records         INTEGER,
		IN iv_no_skip_records        INTEGER,
		OUT ot_plant                 "sap.plc.db.administration::masterdata.tt_plant" default empty,
        OUT ot_company_code          "sap.plc.db.administration::masterdata.tt_company_code" default empty,
        OUT ot_controlling_area      "sap.plc.db.administration::masterdata.tt_controlling_area" default empty,
        OUT ot_plant_text            "sap.plc.db::basis.t_plant__text" default empty
    ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	READS SQL DATA AS
		
BEGIN

/***************************** 
	Select Plant
 *****************************/
 tt_plant_union = 
	                    select  
	                    	plcTable.PLANT_ID,
	      					plcTable.COMPANY_CODE_ID,
	                        plcTableControllingArea.CONTROLLING_AREA_ID AS CONTROLLING_AREA_ID,
	      					plcTable.COUNTRY,
	      					plcTable.POSTAL_CODE,
	      					plcTable.REGION,
	      					plcTable.CITY,
	      					plcTable.STREET_NUMBER_OR_PO_BOX,
	      					plcTable._VALID_FROM,
	      					plcTable._VALID_TO,
	      					plcTable._SOURCE,
	      					plcTable._CREATED_BY,
	     					minValues._VALID_FROM AS _VALID_FROM_FIRST_VERSION,
	      					minValues._CREATED_BY AS _CREATED_BY_FIRST_VERSION,
	      					plcTextTable.PLANT_DESCRIPTION	                    
	                    from "sap.plc.db::basis.t_plant" as plcTable 
	                    inner join 
							(   select A._VALID_FROM, A.PLANT_ID, A._CREATED_BY 
								from "sap.plc.db::basis.t_plant" AS A 
									inner join 
									( select MIN(_VALID_FROM) AS _VALID_FROM, PLANT_ID
										from "sap.plc.db::basis.t_plant" 
										group by PLANT_ID
									) AS B
									ON A._VALID_FROM = B._VALID_FROM AND A.PLANT_ID = B.PLANT_ID
							) AS minValues
						 	on  plcTable.PLANT_ID = minValues.PLANT_ID
						inner join "sap.plc.db::basis.t_company_code" as plcTableCompanyCode
							on  plcTableCompanyCode.COMPANY_CODE_ID = plcTable.COMPANY_CODE_ID 
	                        and plcTableCompanyCode._VALID_FROM <= :iv_master_data_timestamp 
	                        and (plcTableCompanyCode._VALID_TO > :iv_master_data_timestamp or plcTableCompanyCode._VALID_TO is null)  
						inner join  "sap.plc.db::basis.t_controlling_area" as plcTableControllingArea
						    on  plcTableControllingArea.CONTROLLING_AREA_ID = plcTableCompanyCode.CONTROLLING_AREA_ID 
	                        and plcTableControllingArea._VALID_FROM <= :iv_master_data_timestamp 
	                        and (plcTableControllingArea._VALID_TO > :iv_master_data_timestamp or plcTableControllingArea._VALID_TO is null) 
	                    left outer join "sap.plc.db::basis.t_plant__text" as plcTextTable 
	                        on  plcTable.PLANT_ID = plcTextTable.PLANT_ID 
	                        and plcTextTable.LANGUAGE = :iv_logon_language 
	                        and plcTextTable._VALID_FROM <= :iv_master_data_timestamp 
	                        and (plcTextTable._VALID_TO > :iv_master_data_timestamp or plcTextTable._VALID_TO is null)  
	                    where plcTable._VALID_FROM <= :iv_master_data_timestamp 
	                        and (plcTable._VALID_TO > :iv_master_data_timestamp or plcTable._VALID_TO is null)
                  order by plcTable.PLANT_ID;
 
 tt_plant_filter = APPLY_FILTER(:tt_plant_union, :iv_filter_string) ; 
 
 ot_plant = 
 			select PLANT_ID, COMPANY_CODE_ID, COUNTRY, POSTAL_CODE, REGION, CITY, STREET_NUMBER_OR_PO_BOX, _VALID_FROM, _VALID_TO, _SOURCE, 
				   _CREATED_BY, _VALID_FROM_FIRST_VERSION, _CREATED_BY_FIRST_VERSION, PLANT_DESCRIPTION 
			from :tt_plant_filter limit :iv_no_max_records offset :iv_no_skip_records;  
          
 ot_plant_text = select  
					 plcTextTable.PLANT_ID, 
					 plcTextTable.LANGUAGE, 
					 plcTextTable.PLANT_DESCRIPTION, 
					 plcTextTable._VALID_FROM, 
					 plcTextTable._VALID_TO,
					 plcTextTable._SOURCE,
					 plcTextTable._CREATED_BY 
				 from "sap.plc.db::basis.t_plant__text" as plcTextTable 
				 where ( plcTextTable.PLANT_ID) in ( select PLANT_ID from :ot_plant ) 
				 	and plcTextTable._VALID_FROM <= :iv_master_data_timestamp 
				 	and (plcTextTable._VALID_TO > :iv_master_data_timestamp or plcTextTable._VALID_TO is null);
							 	
--select company_code							 	
 tt_company_code_id = 	select distinct COMPANY_CODE_ID from :ot_plant; 
 call "sap.plc.db.administration.procedures::p_ref_company_code_read"(:iv_logon_language,:iv_master_data_timestamp,'',:tt_company_code_id,:ot_company_code); 
 
--select controlling_area	
 tt_controlling_area_id = select distinct CONTROLLING_AREA_ID from :ot_company_code;
 call "sap.plc.db.administration.procedures::p_ref_controlling_area_read"(:iv_logon_language,:iv_master_data_timestamp,:tt_controlling_area_id,:ot_controlling_area);

END;