PROCEDURE "sap.plc.db.administration.procedures::p_account_read" ( 
		IN iv_logon_language	      		NVARCHAR(11),
		IN iv_master_data_timestamp   		TIMESTAMP,
		IN iv_filter_string	        	    NVARCHAR(5000),
		IN iv_no_max_records                INTEGER,
		IN iv_no_skip_records               INTEGER,
		OUT ot_accounts					    "sap.plc.db.administration::masterdata.tt_accounts" default empty,
		OUT ot_accounts_text			    "sap.plc.db::basis.t_account__text" default empty,
		OUT ot_controlling_area     	    "sap.plc.db.administration::masterdata.tt_controlling_area" default empty
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	READS SQL DATA AS
BEGIN


/**************************************
	Select accounts for autocomplete
 **************************************/

--select accounts (used in ranges)
ot_accounts_union =
	select ACCOUNT_ID, CONTROLLING_AREA_ID, _VALID_FROM, _VALID_TO, _SOURCE, 
		   _CREATED_BY, _VALID_FROM_FIRST_VERSION, _CREATED_BY_FIRST_VERSION, ACCOUNT_DESCRIPTION from (
			select  
			    plcTable.ACCOUNT_ID,
			    plcTable.CONTROLLING_AREA_ID, 
			    plcTable._VALID_FROM, 
			    plcTable._VALID_TO,
			    plcTable._SOURCE,
			    plcTable._CREATED_BY,
		        minValues._VALID_FROM as _VALID_FROM_FIRST_VERSION,
		        minValues._CREATED_BY as _CREATED_BY_FIRST_VERSION,
			    plcTextTable.ACCOUNT_DESCRIPTION 
			from "sap.plc.db::basis.t_account" as plcTable
			inner join 
				( 	select A._VALID_FROM, A.ACCOUNT_ID, A.CONTROLLING_AREA_ID, A._CREATED_BY
					from "sap.plc.db::basis.t_account" as A
					inner join 
					(	select MIN(_VALID_FROM) as _VALID_FROM, ACCOUNT_ID, CONTROLLING_AREA_ID
						from "sap.plc.db::basis.t_account"
							group by ACCOUNT_ID, CONTROLLING_AREA_ID
					) as B
						on A._VALID_FROM = B._VALID_FROM and A.ACCOUNT_ID = B.ACCOUNT_ID and  A.CONTROLLING_AREA_ID = B.CONTROLLING_AREA_ID
				) as minValues
					on plcTable.ACCOUNT_ID = minValues.ACCOUNT_ID
					and plcTable.CONTROLLING_AREA_ID = minValues.CONTROLLING_AREA_ID
			left outer join "sap.plc.db::basis.t_account__text" as plcTextTable 
			    on  plcTable.ACCOUNT_ID = plcTextTable.ACCOUNT_ID 
			    and plcTable.CONTROLLING_AREA_ID = plcTextTable.CONTROLLING_AREA_ID 
			    and plcTextTable.LANGUAGE = :iv_logon_language 
			    and plcTextTable._VALID_FROM <= :iv_master_data_timestamp 
			    and (plcTextTable._VALID_TO > :iv_master_data_timestamp or plcTextTable._VALID_TO is null)  
			where plcTable._VALID_FROM <= :iv_master_data_timestamp 
			    and (plcTable._VALID_TO > :iv_master_data_timestamp or plcTable._VALID_TO is null)	
		 ) 
       order by ACCOUNT_ID, CONTROLLING_AREA_ID;

ot_accounts_filter = APPLY_FILTER(:ot_accounts_union, :iv_filter_string) ; 

ot_accounts =	 
		select ACCOUNT_ID, CONTROLLING_AREA_ID, _VALID_FROM, _VALID_TO, _SOURCE, 
		  	   _CREATED_BY, _VALID_FROM_FIRST_VERSION, _CREATED_BY_FIRST_VERSION, ACCOUNT_DESCRIPTION 
		  	   from :ot_accounts_filter limit :iv_no_max_records offset :iv_no_skip_records; 
          
ot_accounts_text =
				select  
					plcTextTable.ACCOUNT_ID,
					plcTextTable.CONTROLLING_AREA_ID,
					plcTextTable.LANGUAGE,
					plcTextTable.ACCOUNT_DESCRIPTION, 
					plcTextTable._VALID_FROM, 
					plcTextTable._VALID_TO,
					plcTextTable._SOURCE,
					plcTextTable._CREATED_BY
				from "sap.plc.db::basis.t_account__text" as plcTextTable 
				where ( plcTextTable.ACCOUNT_ID, plcTextTable.CONTROLLING_AREA_ID) in ( select ACCOUNT_ID, CONTROLLING_AREA_ID from :ot_accounts ) 
					and plcTextTable._VALID_FROM <= :iv_master_data_timestamp 
					and ( plcTextTable._VALID_TO > :iv_master_data_timestamp or plcTextTable._VALID_TO is null ); 

--select controlling area	
ot_controlling_area_key = select distinct CONTROLLING_AREA_ID from :ot_accounts;
call "sap.plc.db.administration.procedures::p_ref_controlling_area_read"(:iv_logon_language,:iv_master_data_timestamp,:ot_controlling_area_key,ot_controlling_area);	
 
END;
