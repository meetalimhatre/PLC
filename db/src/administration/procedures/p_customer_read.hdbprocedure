PROCEDURE "sap.plc.db.administration.procedures::p_customer_read" (
		IN iv_master_data_timestamp     TIMESTAMP,
		IN iv_filter_string	        	NVARCHAR(5000),
		IN iv_no_max_records            INTEGER,
		IN iv_no_skip_records           INTEGER,
		OUT ot_customer                 "sap.plc.db.administration::masterdata.tt_customer" default empty
 	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	READS SQL DATA AS
BEGIN

/*************************************************** 
	Select customers  
 ***************************************************/
 
 --select customers
 tt_customer_union =
		select
 			plcTable.CUSTOMER_ID,
 			plcTable.CUSTOMER_NAME,
 			plcTable.COUNTRY,
 			plcTable.POSTAL_CODE,
 			plcTable.REGION,
 			plcTable.CITY,
 			plcTable.STREET_NUMBER_OR_PO_BOX,
 			plcTable._VALID_FROM,
 			plcTable._VALID_TO,
 			plcTable._SOURCE,
 			plcTable._CREATED_BY,
		    minValues._VALID_FROM AS _VALID_FROM_FIRST_VERSION,
		    minValues._CREATED_BY AS _CREATED_BY_FIRST_VERSION
		from "sap.plc.db::basis.t_customer" as plcTable
		inner join 
			(   select A._VALID_FROM, A.CUSTOMER_ID, A._CREATED_BY 
				from "sap.plc.db::basis.t_customer" AS A 
					inner join 
					( select MIN(_VALID_FROM) AS _VALID_FROM, CUSTOMER_ID
						from "sap.plc.db::basis.t_customer" 
						group by CUSTOMER_ID
					) AS B
					ON A._VALID_FROM = B._VALID_FROM AND A.CUSTOMER_ID = B.CUSTOMER_ID
			) AS minValues
		 	on  plcTable.CUSTOMER_ID = minValues.CUSTOMER_ID
		where plcTable._VALID_FROM <= :iv_master_data_timestamp 
			and ( plcTable._VALID_TO > :iv_master_data_timestamp or plcTable._VALID_TO is null )
        order by plcTable.CUSTOMER_ID;			

 tt_customer_filter = APPLY_FILTER(:tt_customer_union, :iv_filter_string) ;      
	
 ot_customer =  
 		select CUSTOMER_ID, CUSTOMER_NAME, COUNTRY, POSTAL_CODE, REGION, CITY, STREET_NUMBER_OR_PO_BOX, _VALID_FROM, _VALID_TO, _SOURCE, _CREATED_BY,
 	           _VALID_FROM_FIRST_VERSION, _CREATED_BY_FIRST_VERSION 
 	           from :tt_customer_filter limit :iv_no_max_records offset :iv_no_skip_records;     
 
END;
