PROCEDURE "sap.plc.db.masterdata_replication.procedures::p_update_t_plant" (
    IN INPUT_TABLE TABLE (
    	"PLANT_ID" NVARCHAR(8),
    	"COMPANY_CODE_ID" NVARCHAR(4),
    	"COUNTRY"  NVARCHAR(100),
    	"POSTAL_CODE"  NVARCHAR(35),
    	"REGION"  NVARCHAR(100),
    	"CITY"  NVARCHAR(100),
    	"STREET_NUMBER_OR_PO_BOX"  NVARCHAR(100),
    	"_SOURCE" TINYINT -- 1: PLC / 2: ERP
    ),
    OUT OV_PROCESSED_ROWS INTEGER
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
as

    lv_current_utctimestamp	timestamp;
    lv_rows_count integer;
    lv_current_user nvarchar(256);
    lv_run_id nvarchar(50);

BEGIN

    select current_utctimestamp 
        into lv_current_utctimestamp 
        from "sap.plc.db::DUMMY";
        
        SELECT SESSION_CONTEXT('APPLICATIONUSER') 
        INTO lv_current_user 
        FROM "sap.plc.db::DUMMY";
    
        SELECT SESSION_CONTEXT('SCHEDULER_RUN_ID') 
        INTO lv_run_id 
        FROM "sap.plc.db::DUMMY";

    -- Insert into general Error Table
    INSERT INTO "sap.plc.db::map.t_replication_log" (
        FIELD_NAME ,
        FIELD_VALUE,
        MESSAGE_TEXT ,
        MESSAGE_TIME ,
        MESSAGE_TYPE ,
		TABLE_NAME,
		OPERATION,
		RUN_ID
    )-- check if company code exists, not yet
        select 
            'COMPANY_CODE_ID'                                               as FIELD_NAME ,
            it.COMPANY_CODE_ID                                              as FIELD_VALUE,
            'Unknown Company Code ID for Plant ID ' || it.PLANT_ID          as MESSAGE_TEXT ,
            lv_current_utctimestamp                                         as MESSAGE_TIME ,
            'ERROR'                                                         as MESSAGE_TYPE ,
            't_plant'                                                       as TABLE_NAME,
            'Replication_Update'                                            as OPERATION,
			:lv_run_id                                                      as RUN_ID
        from :INPUT_TABLE as it
        where it.COMPANY_CODE_ID not in (select COMPANY_CODE_ID from "sap.plc.db::basis.t_company_code")
    ;
    
    lt_update_records =
        select PLANT_ID, COMPANY_CODE_ID, COUNTRY, POSTAL_CODE, REGION, CITY, STREET_NUMBER_OR_PO_BOX, _SOURCE
        from 
        (select *, 
            Count(*) OVER (PARTITION BY PLANT_ID) AS DUPLICATE_KEY_COUNT
            from :INPUT_TABLE
        ) as it
        where it.DUPLICATE_KEY_COUNT = 1
            -- ignore not existing Conmpany code
          and  (it.COMPANY_CODE_ID = '*' or  it.COMPANY_CODE_ID in (select COMPANY_CODE_ID from "sap.plc.db::basis.t_company_code") )
            -- ignore unchanged records 
          --and (it.PLANT_ID ,it.COMPANY_CODE_ID ,IFNULL(it.COUNTRY,'') ,IFNULL(it.POSTAL_CODE,'') ,IFNULL(it.REGION,'') ,IFNULL(it.CITY,'') ,IFNULL(it. STREET_NUMBER_OR_PO_BOX,'') ,it._SOURCE) 
          --    not in 
		except  	   
              (select PLANT_ID, COMPANY_CODE_ID, COUNTRY, POSTAL_CODE, REGION, CITY, STREET_NUMBER_OR_PO_BOX, _SOURCE
              --PLANT_ID, COMPANY_CODE_ID, IFNULL(COUNTRY,''), IFNULL(POSTAL_CODE,''), IFNULL(REGION,''), IFNULL(CITY,''), IFNULL(STREET_NUMBER_OR_PO_BOX,''), _SOURCE
                    from "sap.plc.db::basis.t_plant" as std
                    where _VALID_TO IS NULL
                    AND std.PLANT_ID in (select PLANT_ID from :INPUT_TABLE));

    SELECT COUNT(PLANT_ID) into lv_rows_count from :lt_update_records;
    OV_PROCESSED_ROWS := :lv_rows_count;
    
    if (:lv_rows_count > 0) then
        -- outdate the old timestamp
    	UPDATE "sap.plc.db::basis.t_plant" as tbl
    		SET _VALID_TO = :lv_current_utctimestamp , _CREATED_BY = :lv_current_user  
    		WHERE 
    		      tbl.PLANT_ID
    		      in (select PLANT_ID
    			      from :lt_update_records as upd 
    			      where upd.PLANT_ID = tbl.PLANT_ID
    		      )
    			  AND tbl._VALID_TO IS NULL;
    	
    	-- inser the new entries
    	INSERT INTO  "sap.plc.db::basis.t_plant" 
    		(PLANT_ID ,COMPANY_CODE_ID ,COUNTRY ,POSTAL_CODE ,REGION ,CITY , STREET_NUMBER_OR_PO_BOX, _VALID_FROM, _VALID_TO, _SOURCE, _CREATED_BY )
    		select PLANT_ID ,COMPANY_CODE_ID ,COUNTRY ,POSTAL_CODE ,REGION ,CITY , STREET_NUMBER_OR_PO_BOX, :lv_current_utctimestamp as _VALID_FROM, null as _VALID_TO, _SOURCE, :lv_current_user as _CREATED_BY 
    		from :lt_update_records;
	END IF;	
    
END