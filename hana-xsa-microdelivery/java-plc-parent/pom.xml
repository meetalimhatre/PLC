<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.sap.plc.xsa</groupId>
        <artifactId>xsac-plc-parent</artifactId>
        <version>${revision}</version>
    </parent>
    <artifactId>java-plc-parent</artifactId>
    <version>${revision}</version>
    <name>java-plc-parent</name>
    <packaging>pom</packaging>
    <modules>
        <module>service-manager-client</module>
        <module>xsac-plc-mt</module>
        <module>xsac-plc-map</module>
        <module>xsac-plc-scheduler</module>
        <module>publicapi-parent</module>
    </modules>
    <properties>

        <!-- Managed dependencies versions -->
        <spring.boot.version>3.1.5</spring.boot.version>
        <org.springframework.boot.spring-boot-starter-cloud-connectors.version>2.2.13.RELEASE
        </org.springframework.boot.spring-boot-starter-cloud-connectors.version>
        <com.fasterxml.jackson.core.jackson-bom.version>2.13.4.20221013</com.fasterxml.jackson.core.jackson-bom.version>
        <com.h2database.h2.version>2.1.210</com.h2database.h2.version>
        <org.mapstruct.mapstruct.version>1.5.5.Final</org.mapstruct.mapstruct.version>
        <org.mapstruct.mapstruct-processor.version>1.5.5.Final</org.mapstruct.mapstruct-processor.version>
        <javax.validation.validation-api.version>2.0.1.Final</javax.validation.validation-api.version>
        <com.sap.hana.cloud.spring-cloud-cloudfoundry-hana-service-connector.version>1.0.4.RELEASE
        </com.sap.hana.cloud.spring-cloud-cloudfoundry-hana-service-connector.version>
        <org.apache.httpcomponents.httpclient.version>4.5.13</org.apache.httpcomponents.httpclient.version>
        <org.springframework.cloud.spring-cloud-cloudfoundry-connector.version>2.0.9.RELEASE
        </org.springframework.cloud.spring-cloud-cloudfoundry-connector.version>
        <org.springframework.cloud.spring-cloud-spring-service-connector.version>2.0.9.RELEASE
        </org.springframework.cloud.spring-cloud-spring-service-connector.version>
        <org.springframework.cloud.spring-cloud-core.version>1.2.9.RELEASE
        </org.springframework.cloud.spring-cloud-core.version>
        <spring.security.version>6.1.5</spring.security.version>
        <junit.junit.version>4.13.2</junit.junit.version>
        <org.mock-server.mockserver-core.version>5.11.2</org.mock-server.mockserver-core.version>
        <com.sap.xs.auditlog.audit-java-client-impl.version>2.0.16</com.sap.xs.auditlog.audit-java-client-impl.version>
        <com.sap.xs.auditlog.audit-java-client-api.version>2.0.16</com.sap.xs.auditlog.audit-java-client-api.version>
        <io.swagger.codegen.v3.swagger-codegen-generators.version>1.0.32
        </io.swagger.codegen.v3.swagger-codegen-generators.version>
        <org.assertj.assertj-core.version>3.20.2</org.assertj.assertj-core.version>
        <com.sap.cloud.sjb.cf.sap-java-buildpack-bom.version>1.48.1
        </com.sap.cloud.sjb.cf.sap-java-buildpack-bom.version>
        <com.sap.cloud.security.xsuaa.xsuaa-spring-boot-starter.version>3.0.1
        </com.sap.cloud.security.xsuaa.xsuaa-spring-boot-starter.version>
        <org.webjars.swagger-ui.version>4.11.1</org.webjars.swagger-ui.version>
        <com.sap.cp.security.credential-store-client-java.version>1.44.0
        </com.sap.cp.security.credential-store-client-java.version>
        <org.apache.commons.commons-collections4.version>4.4</org.apache.commons.commons-collections4.version>
        <org.postgresql.postgresql.version>42.5.1</org.postgresql.postgresql.version>
        <org.liquibase.liquibase-core.version>4.22.0</org.liquibase.liquibase-core.version>

        <!-- Fixes for transitive dependency vulnerabilities -->
        <commons-io.commons-io.version>2.11.0</commons-io.commons-io.version>

        <!-- Plugin versions -->
        <org.apache.maven.plugins.maven-clean-plugin.version>3.1.0</org.apache.maven.plugins.maven-clean-plugin.version>
        <org.apache.maven.plugins.compiler.version>3.8.1</org.apache.maven.plugins.compiler.version>
        <io.swagger.codegen.v3.swagger-codegen-maven-plugin.version>3.0.27
        </io.swagger.codegen.v3.swagger-codegen-maven-plugin.version>
        <org.jacoco.maven.plugin.version>0.8.7</org.jacoco.maven.plugin.version>
        <org.codehaus.mojo.build-helper-maven-plugin.version>3.2.0</org.codehaus.mojo.build-helper-maven-plugin.version>
        <org.apache.maven.plugins.failsafe.version>3.0.0-M5</org.apache.maven.plugins.failsafe.version>
        <org.apache.maven.plugins.surefire.version>3.0.0-M5</org.apache.maven.plugins.surefire.version>
        <org.mock-server.mockserver-maven-plugin.version>5.11.2</org.mock-server.mockserver-maven-plugin.version>
        <hibernate-core.version>6.1.3.Final</hibernate-core.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.1.0</springdoc-openapi-starter-webmvc-ui.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <tomcat-embed-core.version>10.1.15</tomcat-embed-core.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring.boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${org.liquibase.liquibase-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${com.h2database.h2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${org.postgresql.postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sap.cloud.security.xsuaa</groupId>
                <artifactId>xsuaa-spring-boot-starter</artifactId>
                <version>${com.sap.cloud.security.xsuaa.xsuaa-spring-boot-starter.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.sap.cp.security</groupId>
                <artifactId>credential-store-client-java</artifactId>
                <version>${com.sap.cp.security.credential-store-client-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sap.hana.cloud</groupId>
                <artifactId>spring-cloud-cloudfoundry-hana-service-connector</artifactId>
                <version>${com.sap.hana.cloud.spring-cloud-cloudfoundry-hana-service-connector.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>spring-cloud-core</groupId>
                        <artifactId>org.springframework.cloud</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.sap.plc.xsa</groupId>
                <artifactId>xsac-plc-publicapi-swaggergen</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.sap.xs.auditlog</groupId>
                <artifactId>audit-java-client-api</artifactId>
                <version>${com.sap.xs.auditlog.audit-java-client-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.sap.xs.auditlog</groupId>
                <artifactId>audit-java-client-impl</artifactId>
                <version>${com.sap.xs.auditlog.audit-java-client-impl.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>${org.webjars.swagger-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.codegen.v3</groupId>
                <artifactId>swagger-codegen-generators</artifactId>
                <version>${io.swagger.codegen.v3.swagger-codegen-generators.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.validation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${org.apache.commons.commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${org.apache.httpcomponents.httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${org.assertj.assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cloud-connectors</artifactId>
                <version>${org.springframework.boot.spring-boot-starter-cloud-connectors.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
                <version>${org.springframework.cloud.spring-cloud-cloudfoundry-connector.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-core</artifactId>
                <version>${org.springframework.cloud.spring-cloud-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-spring-service-connector</artifactId>
                <version>${org.springframework.cloud.spring-cloud-spring-service-connector.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <version>${spring.security.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-client</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${tomcat-embed-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-core</artifactId>
                <version>${org.mock-server.mockserver-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${com.fasterxml.jackson.core.jackson-bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.sap.cloud.sjb.cf</groupId>
                <artifactId>sap-java-buildpack-bom</artifactId>
                <version>${com.sap.cloud.sjb.cf.sap-java-buildpack-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${org.apache.maven.plugins.compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.swagger.codegen.v3</groupId>
                    <artifactId>swagger-codegen-maven-plugin</artifactId>
                    <version>${io.swagger.codegen.v3.swagger-codegen-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${org.jacoco.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${org.codehaus.mojo.build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${org.apache.maven.plugins.surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${org.apache.maven.plugins.failsafe.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.mock-server</groupId>
                    <artifactId>mockserver-maven-plugin</artifactId>
                    <version>${org.mock-server.mockserver-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${maven.skip.tests}</skipTests>
                    <forkCount>2</forkCount>
                    <reuseForks>true</reuseForks>
                    <argLine>${java.tests.forked.jvm.args} ${surefire.jacoco.args}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skipTests>${maven.skip.tests}</skipTests>
                            <forkCount>2</forkCount>
                            <reuseForks>true</reuseForks>
                            <argLine>${java.tests.forked.jvm.args} ${failsafe.jacoco.args}</argLine>
                            <classesDirectory>${project.build.directory}/${project.artifactId}.jar.original</classesDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
